{"ast":null,"code":"var _jsxFileName = \"/Users/akshitaanand/Documents/GitHub/emotion/App/src/pages/video.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, Component } from 'react';\nimport TFToVideo from './TFToVideo';\nimport { Model } from './model';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet _stream;\n\nvar image = '';\nvar currentEmotion = '';\n\nfunction Video() {\n  _s();\n\n  const camaraRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(function (stream) {\n      _stream = stream;\n      camaraRef.current.srcObject = stream;\n    }).catch(function (err0r) {\n      console.log('Something went wrong!', err0r);\n    });\n    return () => {\n      if (_stream) {\n        _stream.getTracks().forEach(function (track) {\n          track.stop();\n        });\n      }\n\n      function getEmotion() {\n        currentEmotion = Model();\n      }\n\n      setInterval(getEmotion, 20000);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"navi\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          style: {\n            width: '700px',\n            height: '500px'\n          },\n          autoPlay: true,\n          muted: true,\n          controls: true,\n          id: \"videoId\",\n          ref: camaraRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"infoi\",\n        children: /*#__PURE__*/_jsxDEV(TFToVideo, {\n          videoId: \"videoId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentEmotion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Video, \"9LW7AUuygFkHp5sWwF1ZKICY1Qs=\");\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/Users/akshitaanand/Documents/GitHub/emotion/App/src/pages/video.js"],"names":["React","useEffect","useRef","Component","TFToVideo","Model","_stream","image","currentEmotion","Video","camaraRef","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err0r","console","log","getTracks","forEach","track","stop","getEmotion","setInterval","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,SAApB;;;AACA,IAAIC,OAAJ;;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,cAAc,GAAG,EAArB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAMC,SAAS,GAAGR,MAAM,EAAxB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADhB,EAEGC,IAFH,CAEQ,UAAUC,MAAV,EAAkB;AACtBV,MAAAA,OAAO,GAAGU,MAAV;AACAN,MAAAA,SAAS,CAACO,OAAV,CAAkBC,SAAlB,GAA8BF,MAA9B;AACD,KALH,EAMGG,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,KAArC;AACD,KARH;AASA,WAAO,MAAM;AACX,UAAId,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACiB,SAAR,GAAoBC,OAApB,CAA4B,UAAUC,KAAV,EAAiB;AAC3CA,UAAAA,KAAK,CAACC,IAAN;AACD,SAFD;AAGD;;AACD,eAASC,UAAT,GAAsB;AACpBnB,QAAAA,cAAc,GAAGH,KAAK,EAAtB;AAEF;;AACDuB,MAAAA,WAAW,CAACD,UAAD,EAAa,KAAb,CAAX;AACA,KAXD;AAYD,GAtBQ,EAsBN,EAtBM,CAAT;AAuBA,sBACE;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACI;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,+BACI;AACI,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,MAAM,EAAE;AAA1B,WADX;AAEI,UAAA,QAAQ,MAFZ;AAGI,UAAA,KAAK,MAHT;AAII,UAAA,QAAQ,MAJZ;AAKI,UAAA,EAAE,EAAC,SALP;AAMI,UAAA,GAAG,EAAEpB;AANT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBA;AAAA,6BACE;AAAA,kBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAhDMC,K;;KAAAA,K;AAmDT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useRef, Component } from 'react';\nimport TFToVideo from './TFToVideo';\nimport {Model} from './model'\nlet _stream;\nvar image = ''\nvar currentEmotion = ''\n\nfunction Video() {\n    const camaraRef = useRef();\n    useEffect(() => {\n      navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then(function (stream) {\n          _stream = stream;\n          camaraRef.current.srcObject = stream;\n        })\n        .catch(function (err0r) {\n          console.log('Something went wrong!', err0r);\n        });\n      return () => {\n        if (_stream) {\n          _stream.getTracks().forEach(function (track) {\n            track.stop();\n          });\n        }\n        function getEmotion() {\n          currentEmotion = Model()\n          \n       }\n       setInterval(getEmotion, 20000);\n      };\n    }, []);\n    return (\n      <div>\n        <div id=\"container\">\n            <div id=\"navi\">\n                <video\n                    style={{ width: '700px', height: '500px'}}\n                    autoPlay\n                    muted\n                    controls\n                    id=\"videoId\"\n                    ref={camaraRef}\n                ></video>\n            </div>\n            <div id=\"infoi\">\n                <TFToVideo videoId=\"videoId\"></TFToVideo>\n            </div>\n      </div>\n      <div>\n        <h2>{currentEmotion}</h2>\n      </div>\n      </div>\n\n    );\n  }\n\n\nexport default Video"]},"metadata":{},"sourceType":"module"}