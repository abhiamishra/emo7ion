{"ast":null,"code":"import * as tf from '@tensorflow/tfjs-core';\nimport { extractWeightsFactory } from '../common';\n\nfunction extractorsFactory(extractWeights, paramMappings) {\n  function extractDepthwiseConvParams(numChannels, mappedPrefix) {\n    var filters = tf.tensor4d(extractWeights(3 * 3 * numChannels), [3, 3, numChannels, 1]);\n    var batch_norm_scale = tf.tensor1d(extractWeights(numChannels));\n    var batch_norm_offset = tf.tensor1d(extractWeights(numChannels));\n    var batch_norm_mean = tf.tensor1d(extractWeights(numChannels));\n    var batch_norm_variance = tf.tensor1d(extractWeights(numChannels));\n    paramMappings.push({\n      paramPath: mappedPrefix + \"/filters\"\n    }, {\n      paramPath: mappedPrefix + \"/batch_norm_scale\"\n    }, {\n      paramPath: mappedPrefix + \"/batch_norm_offset\"\n    }, {\n      paramPath: mappedPrefix + \"/batch_norm_mean\"\n    }, {\n      paramPath: mappedPrefix + \"/batch_norm_variance\"\n    });\n    return {\n      filters: filters,\n      batch_norm_scale: batch_norm_scale,\n      batch_norm_offset: batch_norm_offset,\n      batch_norm_mean: batch_norm_mean,\n      batch_norm_variance: batch_norm_variance\n    };\n  }\n\n  function extractConvParams(channelsIn, channelsOut, filterSize, mappedPrefix, isPointwiseConv) {\n    var filters = tf.tensor4d(extractWeights(channelsIn * channelsOut * filterSize * filterSize), [filterSize, filterSize, channelsIn, channelsOut]);\n    var bias = tf.tensor1d(extractWeights(channelsOut));\n    paramMappings.push({\n      paramPath: mappedPrefix + \"/filters\"\n    }, {\n      paramPath: mappedPrefix + \"/\" + (isPointwiseConv ? 'batch_norm_offset' : 'bias')\n    });\n    return {\n      filters: filters,\n      bias: bias\n    };\n  }\n\n  function extractPointwiseConvParams(channelsIn, channelsOut, filterSize, mappedPrefix) {\n    var _a = extractConvParams(channelsIn, channelsOut, filterSize, mappedPrefix, true),\n        filters = _a.filters,\n        bias = _a.bias;\n\n    return {\n      filters: filters,\n      batch_norm_offset: bias\n    };\n  }\n\n  function extractConvPairParams(channelsIn, channelsOut, mappedPrefix) {\n    var depthwise_conv = extractDepthwiseConvParams(channelsIn, mappedPrefix + \"/depthwise_conv\");\n    var pointwise_conv = extractPointwiseConvParams(channelsIn, channelsOut, 1, mappedPrefix + \"/pointwise_conv\");\n    return {\n      depthwise_conv: depthwise_conv,\n      pointwise_conv: pointwise_conv\n    };\n  }\n\n  function extractMobilenetV1Params() {\n    var conv_0 = extractPointwiseConvParams(3, 32, 3, 'mobilenetv1/conv_0');\n    var conv_1 = extractConvPairParams(32, 64, 'mobilenetv1/conv_1');\n    var conv_2 = extractConvPairParams(64, 128, 'mobilenetv1/conv_2');\n    var conv_3 = extractConvPairParams(128, 128, 'mobilenetv1/conv_3');\n    var conv_4 = extractConvPairParams(128, 256, 'mobilenetv1/conv_4');\n    var conv_5 = extractConvPairParams(256, 256, 'mobilenetv1/conv_5');\n    var conv_6 = extractConvPairParams(256, 512, 'mobilenetv1/conv_6');\n    var conv_7 = extractConvPairParams(512, 512, 'mobilenetv1/conv_7');\n    var conv_8 = extractConvPairParams(512, 512, 'mobilenetv1/conv_8');\n    var conv_9 = extractConvPairParams(512, 512, 'mobilenetv1/conv_9');\n    var conv_10 = extractConvPairParams(512, 512, 'mobilenetv1/conv_10');\n    var conv_11 = extractConvPairParams(512, 512, 'mobilenetv1/conv_11');\n    var conv_12 = extractConvPairParams(512, 1024, 'mobilenetv1/conv_12');\n    var conv_13 = extractConvPairParams(1024, 1024, 'mobilenetv1/conv_13');\n    return {\n      conv_0: conv_0,\n      conv_1: conv_1,\n      conv_2: conv_2,\n      conv_3: conv_3,\n      conv_4: conv_4,\n      conv_5: conv_5,\n      conv_6: conv_6,\n      conv_7: conv_7,\n      conv_8: conv_8,\n      conv_9: conv_9,\n      conv_10: conv_10,\n      conv_11: conv_11,\n      conv_12: conv_12,\n      conv_13: conv_13\n    };\n  }\n\n  function extractPredictionLayerParams() {\n    var conv_0 = extractPointwiseConvParams(1024, 256, 1, 'prediction_layer/conv_0');\n    var conv_1 = extractPointwiseConvParams(256, 512, 3, 'prediction_layer/conv_1');\n    var conv_2 = extractPointwiseConvParams(512, 128, 1, 'prediction_layer/conv_2');\n    var conv_3 = extractPointwiseConvParams(128, 256, 3, 'prediction_layer/conv_3');\n    var conv_4 = extractPointwiseConvParams(256, 128, 1, 'prediction_layer/conv_4');\n    var conv_5 = extractPointwiseConvParams(128, 256, 3, 'prediction_layer/conv_5');\n    var conv_6 = extractPointwiseConvParams(256, 64, 1, 'prediction_layer/conv_6');\n    var conv_7 = extractPointwiseConvParams(64, 128, 3, 'prediction_layer/conv_7');\n    var box_encoding_0_predictor = extractConvParams(512, 12, 1, 'prediction_layer/box_predictor_0/box_encoding_predictor');\n    var class_predictor_0 = extractConvParams(512, 9, 1, 'prediction_layer/box_predictor_0/class_predictor');\n    var box_encoding_1_predictor = extractConvParams(1024, 24, 1, 'prediction_layer/box_predictor_1/box_encoding_predictor');\n    var class_predictor_1 = extractConvParams(1024, 18, 1, 'prediction_layer/box_predictor_1/class_predictor');\n    var box_encoding_2_predictor = extractConvParams(512, 24, 1, 'prediction_layer/box_predictor_2/box_encoding_predictor');\n    var class_predictor_2 = extractConvParams(512, 18, 1, 'prediction_layer/box_predictor_2/class_predictor');\n    var box_encoding_3_predictor = extractConvParams(256, 24, 1, 'prediction_layer/box_predictor_3/box_encoding_predictor');\n    var class_predictor_3 = extractConvParams(256, 18, 1, 'prediction_layer/box_predictor_3/class_predictor');\n    var box_encoding_4_predictor = extractConvParams(256, 24, 1, 'prediction_layer/box_predictor_4/box_encoding_predictor');\n    var class_predictor_4 = extractConvParams(256, 18, 1, 'prediction_layer/box_predictor_4/class_predictor');\n    var box_encoding_5_predictor = extractConvParams(128, 24, 1, 'prediction_layer/box_predictor_5/box_encoding_predictor');\n    var class_predictor_5 = extractConvParams(128, 18, 1, 'prediction_layer/box_predictor_5/class_predictor');\n    var box_predictor_0 = {\n      box_encoding_predictor: box_encoding_0_predictor,\n      class_predictor: class_predictor_0\n    };\n    var box_predictor_1 = {\n      box_encoding_predictor: box_encoding_1_predictor,\n      class_predictor: class_predictor_1\n    };\n    var box_predictor_2 = {\n      box_encoding_predictor: box_encoding_2_predictor,\n      class_predictor: class_predictor_2\n    };\n    var box_predictor_3 = {\n      box_encoding_predictor: box_encoding_3_predictor,\n      class_predictor: class_predictor_3\n    };\n    var box_predictor_4 = {\n      box_encoding_predictor: box_encoding_4_predictor,\n      class_predictor: class_predictor_4\n    };\n    var box_predictor_5 = {\n      box_encoding_predictor: box_encoding_5_predictor,\n      class_predictor: class_predictor_5\n    };\n    return {\n      conv_0: conv_0,\n      conv_1: conv_1,\n      conv_2: conv_2,\n      conv_3: conv_3,\n      conv_4: conv_4,\n      conv_5: conv_5,\n      conv_6: conv_6,\n      conv_7: conv_7,\n      box_predictor_0: box_predictor_0,\n      box_predictor_1: box_predictor_1,\n      box_predictor_2: box_predictor_2,\n      box_predictor_3: box_predictor_3,\n      box_predictor_4: box_predictor_4,\n      box_predictor_5: box_predictor_5\n    };\n  }\n\n  return {\n    extractMobilenetV1Params: extractMobilenetV1Params,\n    extractPredictionLayerParams: extractPredictionLayerParams\n  };\n}\n\nexport function extractParams(weights) {\n  var paramMappings = [];\n\n  var _a = extractWeightsFactory(weights),\n      extractWeights = _a.extractWeights,\n      getRemainingWeights = _a.getRemainingWeights;\n\n  var _b = extractorsFactory(extractWeights, paramMappings),\n      extractMobilenetV1Params = _b.extractMobilenetV1Params,\n      extractPredictionLayerParams = _b.extractPredictionLayerParams;\n\n  var mobilenetv1 = extractMobilenetV1Params();\n  var prediction_layer = extractPredictionLayerParams();\n  var extra_dim = tf.tensor3d(extractWeights(5118 * 4), [1, 5118, 4]);\n  var output_layer = {\n    extra_dim: extra_dim\n  };\n  paramMappings.push({\n    paramPath: 'output_layer/extra_dim'\n  });\n\n  if (getRemainingWeights().length !== 0) {\n    throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\n  }\n\n  return {\n    params: {\n      mobilenetv1: mobilenetv1,\n      prediction_layer: prediction_layer,\n      output_layer: output_layer\n    },\n    paramMappings: paramMappings\n  };\n}","map":{"version":3,"mappings":"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","names":["tf","extractWeightsFactory","extractorsFactory","extractWeights","paramMappings","extractDepthwiseConvParams","numChannels","mappedPrefix","filters","tensor4d","batch_norm_scale","tensor1d","batch_norm_offset","batch_norm_mean","batch_norm_variance","push","paramPath","extractConvParams","channelsIn","channelsOut","filterSize","isPointwiseConv","bias","extractPointwiseConvParams","extractConvPairParams","depthwise_conv","pointwise_conv","extractMobilenetV1Params","conv_0","conv_1","conv_2","conv_3","conv_4","conv_5","conv_6","conv_7","conv_8","conv_9","conv_10","conv_11","conv_12","conv_13","extractPredictionLayerParams","box_encoding_0_predictor","class_predictor_0","box_encoding_1_predictor","class_predictor_1","box_encoding_2_predictor","class_predictor_2","box_encoding_3_predictor","class_predictor_3","box_encoding_4_predictor","class_predictor_4","box_encoding_5_predictor","class_predictor_5","box_predictor_0","box_encoding_predictor","class_predictor","box_predictor_1","box_predictor_2","box_predictor_3","box_predictor_4","box_predictor_5","extractParams","weights","getRemainingWeights","mobilenetv1","prediction_layer","extra_dim","tensor3d","output_layer","length","Error","params"],"sources":["../../../src/ssdMobilenetv1/extractParams.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}