{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = __importDefault(require(\"lodash\"));\n/*\n    Constants\n*/\n\n\nvar errorMessages_1 = __importDefault(require(\"../constants/errorMessages\"));\n/*\n    Utils\n*/\n\n\nvar respond_1 = __importDefault(require(\"../../utils/respond\"));\n\nvar request_1 = __importDefault(require(\"../../utils/request\"));\n/*\n    Delete a file\n*/\n\n\nvar deleteFile = function (fileId, defaultOptions, callback) {\n  if (!fileId) {\n    respond_1.default(true, errorMessages_1.default.FILE_ID_MISSING, callback);\n    return;\n  }\n\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/files/\" + fileId,\n    method: \"DELETE\",\n    json: true\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Get Metadata of a file\n*/\n\n\nvar getMetadata = function (fileIdOrURL, defaultOptions, callback) {\n  if (!fileIdOrURL || fileIdOrURL.trim() == \"\") {\n    respond_1.default(true, errorMessages_1.default.FILE_ID_OR_URL_MISSING, callback);\n    return;\n  }\n\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/files/\" + fileIdOrURL + \"/metadata\",\n    method: \"GET\",\n    json: true\n  }; // In case of URL change the endopint\n\n  if (fileIdOrURL.indexOf(\"http\") === 0) {\n    requestOptions = {\n      url: \"https://api.imagekit.io/v1/metadata?url=\" + fileIdOrURL,\n      method: \"GET\",\n      json: true\n    };\n  }\n\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Get Details of a file\n*/\n\n\nvar getDetails = function (fileId, defaultOptions, callback) {\n  if (!fileId) {\n    respond_1.default(true, errorMessages_1.default.FILE_ID_MISSING, callback);\n    return;\n  }\n\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/files/\" + fileId + \"/details\",\n    method: \"GET\",\n    json: true\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Update file details\n*/\n\n\nvar updateDetails = function (fileId, updateData, defaultOptions, callback) {\n  if (!fileId) {\n    respond_1.default(true, errorMessages_1.default.FILE_ID_MISSING, callback);\n    return;\n  }\n\n  if (!lodash_1.default.isObject(updateData)) {\n    respond_1.default(true, errorMessages_1.default.UPDATE_DATA_MISSING, callback);\n    return;\n  }\n\n  var data = {\n    tags: updateData.tags,\n    customCoordinates: updateData.customCoordinates,\n    extensions: updateData.extensions,\n    webhookUrl: updateData.webhookUrl\n  };\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/files/\" + fileId + \"/details\",\n    method: \"PATCH\",\n    json: data\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    List files\n*/\n\n\nvar listFiles = function (listOptions, defaultOptions, callback) {\n  if (listOptions && !lodash_1.default.isObject(listOptions)) {\n    respond_1.default(true, errorMessages_1.default.UPDATE_DATA_MISSING, callback);\n    return;\n  }\n\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/files/\",\n    method: \"GET\",\n    qs: listOptions || {},\n    json: true\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Bulk Delete By FileIds\n*/\n\n\nvar bulkDeleteFiles = function (fileIdArray, defaultOptions, callback) {\n  if (!Array.isArray(fileIdArray) || fileIdArray.length === 0 || fileIdArray.filter(function (fileId) {\n    return typeof fileId !== \"string\";\n  }).length > 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_FILEIDS_VALUE, callback);\n    return;\n  }\n\n  var data = {\n    fileIds: fileIdArray\n  };\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/files/batch/deleteByFileIds\",\n    method: \"POST\",\n    json: data\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Add tags in bulk\n*/\n\n\nvar bulkAddTags = function (fileIdArray, tags, defaultOptions, callback) {\n  if (!Array.isArray(fileIdArray) || fileIdArray.length === 0 || fileIdArray.filter(function (fileId) {\n    return typeof fileId !== \"string\";\n  }).length > 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_FILEIDS_VALUE, callback);\n    return;\n  }\n\n  if (!Array.isArray(tags) || tags.length === 0 || tags.filter(function (tag) {\n    return typeof tag !== \"string\";\n  }).length > 0) {\n    respond_1.default(true, errorMessages_1.default.BULK_ADD_TAGS_INVALID, callback);\n    return;\n  }\n\n  var data = {\n    fileIds: fileIdArray,\n    tags: tags\n  };\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/files/addTags\",\n    method: \"POST\",\n    json: data\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Remove tags in bulk\n*/\n\n\nvar bulkRemoveTags = function (fileIdArray, tags, defaultOptions, callback) {\n  if (!Array.isArray(fileIdArray) || fileIdArray.length === 0 || fileIdArray.filter(function (fileId) {\n    return typeof fileId !== \"string\";\n  }).length > 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_FILEIDS_VALUE, callback);\n    return;\n  }\n\n  if (!Array.isArray(tags) || tags.length === 0 || tags.filter(function (tag) {\n    return typeof tag !== \"string\";\n  }).length > 0) {\n    respond_1.default(true, errorMessages_1.default.BULK_ADD_TAGS_INVALID, callback);\n    return;\n  }\n\n  var data = {\n    fileIds: fileIdArray,\n    tags: tags\n  };\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/files/removeTags\",\n    method: \"POST\",\n    json: data\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Copy file\n*/\n\n\nvar copyFile = function (sourceFilePath, destinationPath, defaultOptions, callback) {\n  if (typeof sourceFilePath !== \"string\" || sourceFilePath.length === 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_SOURCE_FILE_PATH, callback);\n    return;\n  }\n\n  if (typeof destinationPath !== \"string\" || destinationPath.length === 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_DESTINATION_FOLDER_PATH, callback);\n    return;\n  }\n\n  var data = {\n    sourceFilePath: sourceFilePath,\n    destinationPath: destinationPath\n  };\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/files/copy\",\n    method: \"POST\",\n    json: data\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Move file\n*/\n\n\nvar moveFile = function (sourceFilePath, destinationPath, defaultOptions, callback) {\n  if (typeof sourceFilePath !== \"string\" || sourceFilePath.length === 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_SOURCE_FILE_PATH, callback);\n    return;\n  }\n\n  if (typeof destinationPath !== \"string\" || destinationPath.length === 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_DESTINATION_FOLDER_PATH, callback);\n    return;\n  }\n\n  var data = {\n    sourceFilePath: sourceFilePath,\n    destinationPath: destinationPath\n  };\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/files/move\",\n    method: \"POST\",\n    json: data\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Copy Folder\n*/\n\n\nvar copyFolder = function (sourceFolderPath, destinationPath, defaultOptions, callback) {\n  if (typeof sourceFolderPath !== \"string\" || sourceFolderPath.length === 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_SOURCE_FOLDER_PATH, callback);\n    return;\n  }\n\n  if (typeof destinationPath !== \"string\" || destinationPath.length === 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_DESTINATION_FOLDER_PATH, callback);\n    return;\n  }\n\n  var data = {\n    sourceFolderPath: sourceFolderPath,\n    destinationPath: destinationPath\n  };\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/bulkJobs/copyFolder\",\n    method: \"POST\",\n    json: data\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Move Folder\n*/\n\n\nvar moveFolder = function (sourceFolderPath, destinationPath, defaultOptions, callback) {\n  if (typeof sourceFolderPath !== \"string\" || sourceFolderPath.length === 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_SOURCE_FOLDER_PATH, callback);\n    return;\n  }\n\n  if (typeof destinationPath !== \"string\" || destinationPath.length === 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_DESTINATION_FOLDER_PATH, callback);\n    return;\n  }\n\n  var data = {\n    sourceFolderPath: sourceFolderPath,\n    destinationPath: destinationPath\n  };\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/bulkJobs/moveFolder\",\n    method: \"POST\",\n    json: data\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Create folder\n*/\n\n\nvar createFolder = function (folderName, parentFolderPath, defaultOptions, callback) {\n  if (typeof folderName !== \"string\" || folderName.length === 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_FOLDER_NAME, callback);\n    return;\n  }\n\n  if (typeof parentFolderPath !== \"string\" || parentFolderPath.length === 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_PARENT_FOLDER_PATH, callback);\n    return;\n  }\n\n  var data = {\n    folderName: folderName,\n    parentFolderPath: parentFolderPath\n  };\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/folder\",\n    method: \"POST\",\n    json: data\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Delete folder\n*/\n\n\nvar deleteFolder = function (folderPath, defaultOptions, callback) {\n  if (typeof folderPath !== \"string\" || folderPath.length === 0) {\n    respond_1.default(true, errorMessages_1.default.INVALID_FOLDER_PATH, callback);\n    return;\n  }\n\n  var data = {\n    folderPath: folderPath\n  };\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/folder\",\n    method: \"DELETE\",\n    json: data\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Bulk job status\n*/\n\n\nvar getBulkJobStatus = function (jobId, defaultOptions, callback) {\n  if (!jobId) {\n    respond_1.default(true, errorMessages_1.default.JOB_ID_MISSING, callback);\n    return;\n  }\n\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/bulkJobs/\" + jobId,\n    method: \"GET\",\n    json: true\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n\nexports.default = {\n  deleteFile: deleteFile,\n  getMetadata: getMetadata,\n  getDetails: getDetails,\n  updateDetails: updateDetails,\n  listFiles: listFiles,\n  bulkDeleteFiles: bulkDeleteFiles,\n  bulkAddTags: bulkAddTags,\n  bulkRemoveTags: bulkRemoveTags,\n  copyFile: copyFile,\n  moveFile: moveFile,\n  copyFolder: copyFolder,\n  moveFolder: moveFolder,\n  createFolder: createFolder,\n  deleteFolder: deleteFolder,\n  getBulkJobStatus: getBulkJobStatus\n};","map":{"version":3,"sources":["/Users/akshitaanand/Documents/GitHub/emotion/App/node_modules/imagekit/dist/libs/manage/file.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","lodash_1","require","errorMessages_1","respond_1","request_1","deleteFile","fileId","defaultOptions","callback","default","FILE_ID_MISSING","requestOptions","url","method","json","getMetadata","fileIdOrURL","trim","FILE_ID_OR_URL_MISSING","indexOf","getDetails","updateDetails","updateData","isObject","UPDATE_DATA_MISSING","data","tags","customCoordinates","extensions","webhookUrl","listFiles","listOptions","qs","bulkDeleteFiles","fileIdArray","Array","isArray","length","filter","INVALID_FILEIDS_VALUE","fileIds","bulkAddTags","tag","BULK_ADD_TAGS_INVALID","bulkRemoveTags","copyFile","sourceFilePath","destinationPath","INVALID_SOURCE_FILE_PATH","INVALID_DESTINATION_FOLDER_PATH","moveFile","copyFolder","sourceFolderPath","INVALID_SOURCE_FOLDER_PATH","moveFolder","createFolder","folderName","parentFolderPath","INVALID_FOLDER_NAME","INVALID_PARENT_FOLDER_PATH","deleteFolder","folderPath","INVALID_FOLDER_PATH","getBulkJobStatus","jobId","JOB_ID_MISSING"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lodash_1 = __importDefault(require(\"lodash\"));\n/*\n    Constants\n*/\nvar errorMessages_1 = __importDefault(require(\"../constants/errorMessages\"));\n/*\n    Utils\n*/\nvar respond_1 = __importDefault(require(\"../../utils/respond\"));\nvar request_1 = __importDefault(require(\"../../utils/request\"));\n/*\n    Delete a file\n*/\nvar deleteFile = function (fileId, defaultOptions, callback) {\n    if (!fileId) {\n        respond_1.default(true, errorMessages_1.default.FILE_ID_MISSING, callback);\n        return;\n    }\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/files/\" + fileId,\n        method: \"DELETE\",\n        json: true,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Get Metadata of a file\n*/\nvar getMetadata = function (fileIdOrURL, defaultOptions, callback) {\n    if (!fileIdOrURL || fileIdOrURL.trim() == \"\") {\n        respond_1.default(true, errorMessages_1.default.FILE_ID_OR_URL_MISSING, callback);\n        return;\n    }\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/files/\" + fileIdOrURL + \"/metadata\",\n        method: \"GET\",\n        json: true,\n    };\n    // In case of URL change the endopint\n    if (fileIdOrURL.indexOf(\"http\") === 0) {\n        requestOptions = {\n            url: \"https://api.imagekit.io/v1/metadata?url=\" + fileIdOrURL,\n            method: \"GET\",\n            json: true,\n        };\n    }\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Get Details of a file\n*/\nvar getDetails = function (fileId, defaultOptions, callback) {\n    if (!fileId) {\n        respond_1.default(true, errorMessages_1.default.FILE_ID_MISSING, callback);\n        return;\n    }\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/files/\" + fileId + \"/details\",\n        method: \"GET\",\n        json: true,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Update file details\n*/\nvar updateDetails = function (fileId, updateData, defaultOptions, callback) {\n    if (!fileId) {\n        respond_1.default(true, errorMessages_1.default.FILE_ID_MISSING, callback);\n        return;\n    }\n    if (!lodash_1.default.isObject(updateData)) {\n        respond_1.default(true, errorMessages_1.default.UPDATE_DATA_MISSING, callback);\n        return;\n    }\n    var data = {\n        tags: updateData.tags,\n        customCoordinates: updateData.customCoordinates,\n        extensions: updateData.extensions,\n        webhookUrl: updateData.webhookUrl\n    };\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/files/\" + fileId + \"/details\",\n        method: \"PATCH\",\n        json: data,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    List files\n*/\nvar listFiles = function (listOptions, defaultOptions, callback) {\n    if (listOptions && !lodash_1.default.isObject(listOptions)) {\n        respond_1.default(true, errorMessages_1.default.UPDATE_DATA_MISSING, callback);\n        return;\n    }\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/files/\",\n        method: \"GET\",\n        qs: listOptions || {},\n        json: true,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Bulk Delete By FileIds\n*/\nvar bulkDeleteFiles = function (fileIdArray, defaultOptions, callback) {\n    if (!Array.isArray(fileIdArray) ||\n        fileIdArray.length === 0 ||\n        fileIdArray.filter(function (fileId) { return typeof fileId !== \"string\"; }).length > 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_FILEIDS_VALUE, callback);\n        return;\n    }\n    var data = {\n        fileIds: fileIdArray,\n    };\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/files/batch/deleteByFileIds\",\n        method: \"POST\",\n        json: data,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Add tags in bulk\n*/\nvar bulkAddTags = function (fileIdArray, tags, defaultOptions, callback) {\n    if (!Array.isArray(fileIdArray) ||\n        fileIdArray.length === 0 ||\n        fileIdArray.filter(function (fileId) { return typeof fileId !== \"string\"; }).length > 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_FILEIDS_VALUE, callback);\n        return;\n    }\n    if (!Array.isArray(tags) || tags.length === 0 || tags.filter(function (tag) { return typeof tag !== \"string\"; }).length > 0) {\n        respond_1.default(true, errorMessages_1.default.BULK_ADD_TAGS_INVALID, callback);\n        return;\n    }\n    var data = {\n        fileIds: fileIdArray,\n        tags: tags,\n    };\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/files/addTags\",\n        method: \"POST\",\n        json: data,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Remove tags in bulk\n*/\nvar bulkRemoveTags = function (fileIdArray, tags, defaultOptions, callback) {\n    if (!Array.isArray(fileIdArray) ||\n        fileIdArray.length === 0 ||\n        fileIdArray.filter(function (fileId) { return typeof fileId !== \"string\"; }).length > 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_FILEIDS_VALUE, callback);\n        return;\n    }\n    if (!Array.isArray(tags) || tags.length === 0 || tags.filter(function (tag) { return typeof tag !== \"string\"; }).length > 0) {\n        respond_1.default(true, errorMessages_1.default.BULK_ADD_TAGS_INVALID, callback);\n        return;\n    }\n    var data = {\n        fileIds: fileIdArray,\n        tags: tags,\n    };\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/files/removeTags\",\n        method: \"POST\",\n        json: data,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Copy file\n*/\nvar copyFile = function (sourceFilePath, destinationPath, defaultOptions, callback) {\n    if (typeof sourceFilePath !== \"string\" || sourceFilePath.length === 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_SOURCE_FILE_PATH, callback);\n        return;\n    }\n    if (typeof destinationPath !== \"string\" || destinationPath.length === 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_DESTINATION_FOLDER_PATH, callback);\n        return;\n    }\n    var data = {\n        sourceFilePath: sourceFilePath,\n        destinationPath: destinationPath,\n    };\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/files/copy\",\n        method: \"POST\",\n        json: data,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Move file\n*/\nvar moveFile = function (sourceFilePath, destinationPath, defaultOptions, callback) {\n    if (typeof sourceFilePath !== \"string\" || sourceFilePath.length === 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_SOURCE_FILE_PATH, callback);\n        return;\n    }\n    if (typeof destinationPath !== \"string\" || destinationPath.length === 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_DESTINATION_FOLDER_PATH, callback);\n        return;\n    }\n    var data = {\n        sourceFilePath: sourceFilePath,\n        destinationPath: destinationPath,\n    };\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/files/move\",\n        method: \"POST\",\n        json: data,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Copy Folder\n*/\nvar copyFolder = function (sourceFolderPath, destinationPath, defaultOptions, callback) {\n    if (typeof sourceFolderPath !== \"string\" || sourceFolderPath.length === 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_SOURCE_FOLDER_PATH, callback);\n        return;\n    }\n    if (typeof destinationPath !== \"string\" || destinationPath.length === 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_DESTINATION_FOLDER_PATH, callback);\n        return;\n    }\n    var data = {\n        sourceFolderPath: sourceFolderPath,\n        destinationPath: destinationPath,\n    };\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/bulkJobs/copyFolder\",\n        method: \"POST\",\n        json: data,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Move Folder\n*/\nvar moveFolder = function (sourceFolderPath, destinationPath, defaultOptions, callback) {\n    if (typeof sourceFolderPath !== \"string\" || sourceFolderPath.length === 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_SOURCE_FOLDER_PATH, callback);\n        return;\n    }\n    if (typeof destinationPath !== \"string\" || destinationPath.length === 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_DESTINATION_FOLDER_PATH, callback);\n        return;\n    }\n    var data = {\n        sourceFolderPath: sourceFolderPath,\n        destinationPath: destinationPath,\n    };\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/bulkJobs/moveFolder\",\n        method: \"POST\",\n        json: data,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Create folder\n*/\nvar createFolder = function (folderName, parentFolderPath, defaultOptions, callback) {\n    if (typeof folderName !== \"string\" || folderName.length === 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_FOLDER_NAME, callback);\n        return;\n    }\n    if (typeof parentFolderPath !== \"string\" || parentFolderPath.length === 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_PARENT_FOLDER_PATH, callback);\n        return;\n    }\n    var data = {\n        folderName: folderName,\n        parentFolderPath: parentFolderPath,\n    };\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/folder\",\n        method: \"POST\",\n        json: data,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Delete folder\n*/\nvar deleteFolder = function (folderPath, defaultOptions, callback) {\n    if (typeof folderPath !== \"string\" || folderPath.length === 0) {\n        respond_1.default(true, errorMessages_1.default.INVALID_FOLDER_PATH, callback);\n        return;\n    }\n    var data = {\n        folderPath: folderPath,\n    };\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/folder\",\n        method: \"DELETE\",\n        json: data,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\n/*\n    Bulk job status\n*/\nvar getBulkJobStatus = function (jobId, defaultOptions, callback) {\n    if (!jobId) {\n        respond_1.default(true, errorMessages_1.default.JOB_ID_MISSING, callback);\n        return;\n    }\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/bulkJobs/\" + jobId,\n        method: \"GET\",\n        json: true,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\nexports.default = {\n    deleteFile: deleteFile,\n    getMetadata: getMetadata,\n    getDetails: getDetails,\n    updateDetails: updateDetails,\n    listFiles: listFiles,\n    bulkDeleteFiles: bulkDeleteFiles,\n    bulkAddTags: bulkAddTags,\n    bulkRemoveTags: bulkRemoveTags,\n    copyFile: copyFile,\n    moveFile: moveFile,\n    copyFolder: copyFolder,\n    moveFolder: moveFolder,\n    createFolder: createFolder,\n    deleteFolder: deleteFolder,\n    getBulkJobStatus: getBulkJobStatus,\n};\n"]},"metadata":{},"sourceType":"script"}