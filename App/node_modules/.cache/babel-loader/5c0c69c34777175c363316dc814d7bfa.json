{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { getModelUris } from './common/getModelUris';\nimport { loadWeightMap } from './dom';\nimport { env } from './env';\n\nvar NeuralNetwork =\n/** @class */\nfunction () {\n  function NeuralNetwork(_name) {\n    this._name = _name;\n    this._params = undefined;\n    this._paramMappings = [];\n  }\n\n  Object.defineProperty(NeuralNetwork.prototype, \"params\", {\n    get: function () {\n      return this._params;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(NeuralNetwork.prototype, \"paramMappings\", {\n    get: function () {\n      return this._paramMappings;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(NeuralNetwork.prototype, \"isLoaded\", {\n    get: function () {\n      return !!this.params;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NeuralNetwork.prototype.getParamFromPath = function (paramPath) {\n    var _a = this.traversePropertyPath(paramPath),\n        obj = _a.obj,\n        objProp = _a.objProp;\n\n    return obj[objProp];\n  };\n\n  NeuralNetwork.prototype.reassignParamFromPath = function (paramPath, tensor) {\n    var _a = this.traversePropertyPath(paramPath),\n        obj = _a.obj,\n        objProp = _a.objProp;\n\n    obj[objProp].dispose();\n    obj[objProp] = tensor;\n  };\n\n  NeuralNetwork.prototype.getParamList = function () {\n    var _this = this;\n\n    return this._paramMappings.map(function (_a) {\n      var paramPath = _a.paramPath;\n      return {\n        path: paramPath,\n        tensor: _this.getParamFromPath(paramPath)\n      };\n    });\n  };\n\n  NeuralNetwork.prototype.getTrainableParams = function () {\n    return this.getParamList().filter(function (param) {\n      return param.tensor instanceof tf.Variable;\n    });\n  };\n\n  NeuralNetwork.prototype.getFrozenParams = function () {\n    return this.getParamList().filter(function (param) {\n      return !(param.tensor instanceof tf.Variable);\n    });\n  };\n\n  NeuralNetwork.prototype.variable = function () {\n    var _this = this;\n\n    this.getFrozenParams().forEach(function (_a) {\n      var path = _a.path,\n          tensor = _a.tensor;\n\n      _this.reassignParamFromPath(path, tensor.variable());\n    });\n  };\n\n  NeuralNetwork.prototype.freeze = function () {\n    var _this = this;\n\n    this.getTrainableParams().forEach(function (_a) {\n      var path = _a.path,\n          variable = _a.tensor;\n      var tensor = tf.tensor(variable.dataSync());\n      variable.dispose();\n\n      _this.reassignParamFromPath(path, tensor);\n    });\n  };\n\n  NeuralNetwork.prototype.dispose = function (throwOnRedispose) {\n    if (throwOnRedispose === void 0) {\n      throwOnRedispose = true;\n    }\n\n    this.getParamList().forEach(function (param) {\n      if (throwOnRedispose && param.tensor.isDisposed) {\n        throw new Error(\"param tensor has already been disposed for path \" + param.path);\n      }\n\n      param.tensor.dispose();\n    });\n    this._params = undefined;\n  };\n\n  NeuralNetwork.prototype.serializeParams = function () {\n    return new Float32Array(this.getParamList().map(function (_a) {\n      var tensor = _a.tensor;\n      return Array.from(tensor.dataSync());\n    }).reduce(function (flat, arr) {\n      return flat.concat(arr);\n    }));\n  };\n\n  NeuralNetwork.prototype.load = function (weightsOrUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (weightsOrUrl instanceof Float32Array) {\n              this.extractWeights(weightsOrUrl);\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , this.loadFromUri(weightsOrUrl)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  NeuralNetwork.prototype.loadFromUri = function (uri) {\n    return __awaiter(this, void 0, void 0, function () {\n      var weightMap;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (uri && typeof uri !== 'string') {\n              throw new Error(this._name + \".loadFromUri - expected model uri\");\n            }\n\n            return [4\n            /*yield*/\n            , loadWeightMap(uri, this.getDefaultModelName())];\n\n          case 1:\n            weightMap = _a.sent();\n            this.loadFromWeightMap(weightMap);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  NeuralNetwork.prototype.loadFromDisk = function (filePath) {\n    return __awaiter(this, void 0, void 0, function () {\n      var readFile, _a, manifestUri, modelBaseUri, fetchWeightsFromDisk, loadWeights, manifest, _b, _c, weightMap;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            if (filePath && typeof filePath !== 'string') {\n              throw new Error(this._name + \".loadFromDisk - expected model file path\");\n            }\n\n            readFile = env.getEnv().readFile;\n            _a = getModelUris(filePath, this.getDefaultModelName()), manifestUri = _a.manifestUri, modelBaseUri = _a.modelBaseUri;\n\n            fetchWeightsFromDisk = function (filePaths) {\n              return Promise.all(filePaths.map(function (filePath) {\n                return readFile(filePath).then(function (buf) {\n                  return buf.buffer;\n                });\n              }));\n            };\n\n            loadWeights = tf.io.weightsLoaderFactory(fetchWeightsFromDisk);\n            _c = (_b = JSON).parse;\n            return [4\n            /*yield*/\n            , readFile(manifestUri)];\n\n          case 1:\n            manifest = _c.apply(_b, [_d.sent().toString()]);\n            return [4\n            /*yield*/\n            , loadWeights(manifest, modelBaseUri)];\n\n          case 2:\n            weightMap = _d.sent();\n            this.loadFromWeightMap(weightMap);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  NeuralNetwork.prototype.loadFromWeightMap = function (weightMap) {\n    var _a = this.extractParamsFromWeigthMap(weightMap),\n        paramMappings = _a.paramMappings,\n        params = _a.params;\n\n    this._paramMappings = paramMappings;\n    this._params = params;\n  };\n\n  NeuralNetwork.prototype.extractWeights = function (weights) {\n    var _a = this.extractParams(weights),\n        paramMappings = _a.paramMappings,\n        params = _a.params;\n\n    this._paramMappings = paramMappings;\n    this._params = params;\n  };\n\n  NeuralNetwork.prototype.traversePropertyPath = function (paramPath) {\n    if (!this.params) {\n      throw new Error(\"traversePropertyPath - model has no loaded params\");\n    }\n\n    var result = paramPath.split('/').reduce(function (res, objProp) {\n      if (!res.nextObj.hasOwnProperty(objProp)) {\n        throw new Error(\"traversePropertyPath - object does not have property \" + objProp + \", for path \" + paramPath);\n      }\n\n      return {\n        obj: res.nextObj,\n        objProp: objProp,\n        nextObj: res.nextObj[objProp]\n      };\n    }, {\n      nextObj: this.params\n    });\n    var obj = result.obj,\n        objProp = result.objProp;\n\n    if (!obj || !objProp || !(obj[objProp] instanceof tf.Tensor)) {\n      throw new Error(\"traversePropertyPath - parameter is not a tensor, for path \" + paramPath);\n    }\n\n    return {\n      obj: obj,\n      objProp: objProp\n    };\n  };\n\n  return NeuralNetwork;\n}();\n\nexport { NeuralNetwork };","map":{"version":3,"mappings":"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","names":["tf","getModelUris","loadWeightMap","env","_name","undefined","Object","NeuralNetwork","_params","_paramMappings","params","paramPath","obj","objProp","tensor","dispose","map","_a","path","_this","getParamFromPath","getParamList","filter","Variable","param","getFrozenParams","forEach","reassignParamFromPath","variable","getTrainableParams","dataSync","throwOnRedispose","isDisposed","Error","Float32Array","from","reduce","flat","arr","concat","weightsOrUrl","extractWeights","loadFromUri","uri","getDefaultModelName","weightMap","loadFromWeightMap","filePath","readFile","getEnv","manifestUri","modelBaseUri","fetchWeightsFromDisk","filePaths","all","then","buffer","loadWeights","io","weightsLoaderFactory","_c","parse","manifest","_d","toString","paramMappings","weights","result","split","res","nextObj","hasOwnProperty","Tensor"],"sources":["../../src/NeuralNetwork.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}