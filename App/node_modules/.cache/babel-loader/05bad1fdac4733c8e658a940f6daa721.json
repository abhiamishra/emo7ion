{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // import packages\n\nvar hamming_distance_1 = __importDefault(require(\"hamming-distance\")); // import constants\n\n\nvar errorMessages_1 = __importDefault(require(\"../libs/constants/errorMessages\")); // regexp validator\n\n\nvar hexRegExp = new RegExp(/^[0-9a-fA-F]+$/, \"i\");\n\nvar errorHandler = function (error) {\n  return new Error(error.message + \": \" + error.help);\n};\n\nvar pHashDistance = function (firstHash, secondHash) {\n  if (!firstHash || !secondHash) {\n    return errorHandler(errorMessages_1.default.MISSING_PHASH_VALUE);\n  }\n\n  if (!hexRegExp.test(firstHash) || !hexRegExp.test(secondHash)) {\n    return errorHandler(errorMessages_1.default.INVALID_PHASH_VALUE);\n  }\n\n  var firstHashString = firstHash.toString();\n  var secondHashString = secondHash.toString();\n\n  if (firstHashString.length !== secondHashString.length) {\n    return errorHandler(errorMessages_1.default.UNEQUAL_STRING_LENGTH);\n  }\n\n  var distance = hamming_distance_1.default(firstHashString, secondHashString);\n  return distance;\n};\n\nexports.default = {\n  pHashDistance: pHashDistance\n};","map":{"version":3,"sources":["/Users/akshitaanand/Documents/GitHub/emotion/App/node_modules/imagekit/dist/utils/phash.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","hamming_distance_1","require","errorMessages_1","hexRegExp","RegExp","errorHandler","error","Error","message","help","pHashDistance","firstHash","secondHash","default","MISSING_PHASH_VALUE","test","INVALID_PHASH_VALUE","firstHashString","toString","secondHashString","length","UNEQUAL_STRING_LENGTH","distance"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C,E,CACA;;AACA,IAAIC,kBAAkB,GAAGP,eAAe,CAACQ,OAAO,CAAC,kBAAD,CAAR,CAAxC,C,CACA;;;AACA,IAAIC,eAAe,GAAGT,eAAe,CAACQ,OAAO,CAAC,iCAAD,CAAR,CAArC,C,CACA;;;AACA,IAAIE,SAAS,GAAG,IAAIC,MAAJ,CAAW,gBAAX,EAA6B,GAA7B,CAAhB;;AACA,IAAIC,YAAY,GAAG,UAAUC,KAAV,EAAiB;AAAE,SAAO,IAAIC,KAAJ,CAAUD,KAAK,CAACE,OAAN,GAAgB,IAAhB,GAAuBF,KAAK,CAACG,IAAvC,CAAP;AAAsD,CAA5F;;AACA,IAAIC,aAAa,GAAG,UAAUC,SAAV,EAAqBC,UAArB,EAAiC;AACjD,MAAI,CAACD,SAAD,IAAc,CAACC,UAAnB,EAA+B;AAC3B,WAAOP,YAAY,CAACH,eAAe,CAACW,OAAhB,CAAwBC,mBAAzB,CAAnB;AACH;;AACD,MAAI,CAACX,SAAS,CAACY,IAAV,CAAeJ,SAAf,CAAD,IAA8B,CAACR,SAAS,CAACY,IAAV,CAAeH,UAAf,CAAnC,EAA+D;AAC3D,WAAOP,YAAY,CAACH,eAAe,CAACW,OAAhB,CAAwBG,mBAAzB,CAAnB;AACH;;AACD,MAAIC,eAAe,GAAGN,SAAS,CAACO,QAAV,EAAtB;AACA,MAAIC,gBAAgB,GAAGP,UAAU,CAACM,QAAX,EAAvB;;AACA,MAAID,eAAe,CAACG,MAAhB,KAA2BD,gBAAgB,CAACC,MAAhD,EAAwD;AACpD,WAAOf,YAAY,CAACH,eAAe,CAACW,OAAhB,CAAwBQ,qBAAzB,CAAnB;AACH;;AACD,MAAIC,QAAQ,GAAGtB,kBAAkB,CAACa,OAAnB,CAA2BI,eAA3B,EAA4CE,gBAA5C,CAAf;AACA,SAAOG,QAAP;AACH,CAdD;;AAeAxB,OAAO,CAACe,OAAR,GAAkB;AAAEH,EAAAA,aAAa,EAAEA;AAAjB,CAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// import packages\nvar hamming_distance_1 = __importDefault(require(\"hamming-distance\"));\n// import constants\nvar errorMessages_1 = __importDefault(require(\"../libs/constants/errorMessages\"));\n// regexp validator\nvar hexRegExp = new RegExp(/^[0-9a-fA-F]+$/, \"i\");\nvar errorHandler = function (error) { return new Error(error.message + \": \" + error.help); };\nvar pHashDistance = function (firstHash, secondHash) {\n    if (!firstHash || !secondHash) {\n        return errorHandler(errorMessages_1.default.MISSING_PHASH_VALUE);\n    }\n    if (!hexRegExp.test(firstHash) || !hexRegExp.test(secondHash)) {\n        return errorHandler(errorMessages_1.default.INVALID_PHASH_VALUE);\n    }\n    var firstHashString = firstHash.toString();\n    var secondHashString = secondHash.toString();\n    if (firstHashString.length !== secondHashString.length) {\n        return errorHandler(errorMessages_1.default.UNEQUAL_STRING_LENGTH);\n    }\n    var distance = hamming_distance_1.default(firstHashString, secondHashString);\n    return distance;\n};\nexports.default = { pHashDistance: pHashDistance };\n"]},"metadata":{},"sourceType":"script"}