{"ast":null,"code":"var LabeledFaceDescriptors =\n/** @class */\nfunction () {\n  function LabeledFaceDescriptors(label, descriptors) {\n    if (!(typeof label === 'string')) {\n      throw new Error('LabeledFaceDescriptors - constructor expected label to be a string');\n    }\n\n    if (!Array.isArray(descriptors) || descriptors.some(function (desc) {\n      return !(desc instanceof Float32Array);\n    })) {\n      throw new Error('LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array');\n    }\n\n    this._label = label;\n    this._descriptors = descriptors;\n  }\n\n  Object.defineProperty(LabeledFaceDescriptors.prototype, \"label\", {\n    get: function () {\n      return this._label;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LabeledFaceDescriptors.prototype, \"descriptors\", {\n    get: function () {\n      return this._descriptors;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LabeledFaceDescriptors.prototype.toJSON = function () {\n    return {\n      label: this.label,\n      descriptors: this.descriptors.map(function (d) {\n        return Array.from(d);\n      })\n    };\n  };\n\n  LabeledFaceDescriptors.fromJSON = function (json) {\n    var descriptors = json.descriptors.map(function (d) {\n      return new Float32Array(d);\n    });\n    return new LabeledFaceDescriptors(json.label, descriptors);\n  };\n\n  return LabeledFaceDescriptors;\n}();\n\nexport { LabeledFaceDescriptors };","map":{"version":3,"mappings":"AAAA;AAAA;AAAA;AAIE,kCAAYA,KAAZ,EAA2BC,WAA3B,EAAsD;AACpD,QAAI,EAAE,OAAOD,KAAP,KAAiB,QAAnB,CAAJ,EAAkC;AAChC,YAAM,IAAIE,KAAJ,CAAU,oEAAV,CAAN;AACD;;AAED,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,WAAd,CAAD,IAA+BA,WAAW,CAACI,IAAZ,CAAiB,gBAAI;AAAI,eAAEC,IAAI,YAAYC,YAAlB;AAA+B,KAAxD,CAAnC,EAA8F;AAC5F,YAAM,IAAIL,KAAJ,CAAU,0FAAV,CAAN;AACD;;AAED,SAAKM,MAAL,GAAcR,KAAd;AACA,SAAKS,YAAL,GAAoBR,WAApB;AACD;;AAEDS,wBAAWC,gCAAX,EAAW,OAAX,EAAgB;SAAhB;AAA6B,aAAO,KAAKH,MAAZ;AAAoB,KAAjC;oBAAA;;AAAA,GAAhB;AACAE,wBAAWC,gCAAX,EAAW,aAAX,EAAsB;SAAtB;AAA2C,aAAO,KAAKF,YAAZ;AAA0B,KAA/C;oBAAA;;AAAA,GAAtB;;AAEOE,4CAAP;AACE,WAAO;AACLX,WAAK,EAAE,KAAKA,KADP;AAELC,iBAAW,EAAE,KAAKA,WAAL,CAAiBW,GAAjB,CAAqB,UAACC,CAAD,EAAE;AAAK,oBAAK,CAACC,IAAN,CAAWD,CAAX;AAAa,OAAzC;AAFR,KAAP;AAID,GALM;;AAOOF,oCAAd,UAAuBI,IAAvB,EAAgC;AAC9B,QAAMd,WAAW,GAAGc,IAAI,CAACd,WAAL,CAAiBW,GAAjB,CAAqB,UAACC,CAAD,EAAO;AAC9C,aAAO,IAAIN,YAAJ,CAAiBM,CAAjB,CAAP;AACD,KAFmB,CAApB;AAGA,WAAO,IAAIF,sBAAJ,CAA2BI,IAAI,CAACf,KAAhC,EAAuCC,WAAvC,CAAP;AACD,GALa;;AAOhB;AAAC,CAlCD","names":["label","descriptors","Error","Array","isArray","some","desc","Float32Array","_label","_descriptors","Object","LabeledFaceDescriptors","map","d","from","json"],"sources":["../../../src/classes/LabeledFaceDescriptors.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}