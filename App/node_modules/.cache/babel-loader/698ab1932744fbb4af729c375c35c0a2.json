{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { MtcnnOptions } from '../mtcnn/MtcnnOptions';\nimport { SsdMobilenetv1Options } from '../ssdMobilenetv1';\nimport { TinyYolov2Options } from '../tinyYolov2';\nimport { detectAllFaces } from './detectFaces'; // export allFaces API for backward compatibility\n\nexport function allFacesSsdMobilenetv1(input, minConfidence) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          console.warn('allFacesSsdMobilenetv1 is deprecated and will be removed soon, use the high level api instead');\n          return [4\n          /*yield*/\n          , detectAllFaces(input, new SsdMobilenetv1Options(minConfidence ? {\n            minConfidence: minConfidence\n          } : {})).withFaceLandmarks().withFaceDescriptors()];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent()];\n      }\n    });\n  });\n}\nexport function allFacesTinyYolov2(input, forwardParams) {\n  if (forwardParams === void 0) {\n    forwardParams = {};\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          console.warn('allFacesTinyYolov2 is deprecated and will be removed soon, use the high level api instead');\n          return [4\n          /*yield*/\n          , detectAllFaces(input, new TinyYolov2Options(forwardParams)).withFaceLandmarks().withFaceDescriptors()];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent()];\n      }\n    });\n  });\n}\nexport function allFacesMtcnn(input, forwardParams) {\n  if (forwardParams === void 0) {\n    forwardParams = {};\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          console.warn('allFacesMtcnn is deprecated and will be removed soon, use the high level api instead');\n          return [4\n          /*yield*/\n          , detectAllFaces(input, new MtcnnOptions(forwardParams)).withFaceLandmarks().withFaceDescriptors()];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent()];\n      }\n    });\n  });\n}\nexport var allFaces = allFacesSsdMobilenetv1;","map":{"version":3,"mappings":";AAEA,SAAwBA,YAAxB,QAA4C,uBAA5C;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,SAA6BC,iBAA7B,QAAsD,eAAtD;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CAEA;;AAEA,OAAM,SAAgBC,sBAAhB,CACJC,KADI,EAEJC,aAFI,EAEkB;;;;;AAEtBC,iBAAO,CAACC,IAAR,CAAa,+FAAb;AACO;AAAA;AAAA,YAAML,cAAc,CAACE,KAAD,EAAQ,IAAIJ,qBAAJ,CAA0BK,aAAa,GAAG;AAAEA,yBAAa;AAAf,WAAH,GAAuB,EAA9D,CAAR,CAAd,CACVG,iBADU,GAEVC,mBAFU,EAAN;;;AAAP;AAAA;AAAA,YAAOC,SAAP;;;;AAGD;AAED,OAAM,SAAgBC,kBAAhB,CACJP,KADI,EAEJQ,aAFI,EAEkC;AAAtC;AAAAA;AAAsC;;;;;;AAEtCN,iBAAO,CAACC,IAAR,CAAa,2FAAb;AACO;AAAA;AAAA,YAAML,cAAc,CAACE,KAAD,EAAQ,IAAIH,iBAAJ,CAAsBW,aAAtB,CAAR,CAAd,CACVJ,iBADU,GAEVC,mBAFU,EAAN;;;AAAP;AAAA;AAAA,YAAOC,SAAP;;;;AAGD;AAED,OAAM,SAAgBG,aAAhB,CACJT,KADI,EAEJQ,aAFI,EAE6B;AAAjC;AAAAA;AAAiC;;;;;;AAEjCN,iBAAO,CAACC,IAAR,CAAa,sFAAb;AACO;AAAA;AAAA,YAAML,cAAc,CAACE,KAAD,EAAQ,IAAIL,YAAJ,CAAiBa,aAAjB,CAAR,CAAd,CACVJ,iBADU,GAEVC,mBAFU,EAAN;;;AAAP;AAAA;AAAA,YAAOC,SAAP;;;;AAGD;AAED,OAAO,IAAMI,QAAQ,GAAGX,sBAAjB","names":["MtcnnOptions","SsdMobilenetv1Options","TinyYolov2Options","detectAllFaces","allFacesSsdMobilenetv1","input","minConfidence","console","warn","withFaceLandmarks","withFaceDescriptors","_a","allFacesTinyYolov2","forwardParams","allFacesMtcnn","allFaces"],"sources":["../../../src/globalApi/allFaces.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}