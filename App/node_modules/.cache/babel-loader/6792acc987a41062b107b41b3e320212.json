{"ast":null,"code":"import { __assign, __awaiter, __extends, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { BoundingBox } from '../classes/BoundingBox';\nimport { ObjectDetection } from '../classes/ObjectDetection';\nimport { convLayer } from '../common';\nimport { toNetInput } from '../dom';\nimport { NeuralNetwork } from '../NeuralNetwork';\nimport { sigmoid } from '../ops';\nimport { nonMaxSuppression } from '../ops/nonMaxSuppression';\nimport { normalize } from '../ops/normalize';\nimport { validateConfig } from './config';\nimport { convWithBatchNorm } from './convWithBatchNorm';\nimport { depthwiseSeparableConv } from './depthwiseSeparableConv';\nimport { extractParams } from './extractParams';\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\nimport { leaky } from './leaky';\nimport { TinyYolov2Options } from './TinyYolov2Options';\n\nvar TinyYolov2Base =\n/** @class */\nfunction (_super) {\n  __extends(TinyYolov2Base, _super);\n\n  function TinyYolov2Base(config) {\n    var _this = _super.call(this, 'TinyYolov2') || this;\n\n    validateConfig(config);\n    _this._config = config;\n    return _this;\n  }\n\n  Object.defineProperty(TinyYolov2Base.prototype, \"config\", {\n    get: function () {\n      return this._config;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TinyYolov2Base.prototype, \"withClassScores\", {\n    get: function () {\n      return this.config.withClassScores || this.config.classes.length > 1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TinyYolov2Base.prototype, \"boxEncodingSize\", {\n    get: function () {\n      return 5 + (this.withClassScores ? this.config.classes.length : 0);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TinyYolov2Base.prototype.runTinyYolov2 = function (x, params) {\n    var out = convWithBatchNorm(x, params.conv0);\n    out = tf.maxPool(out, [2, 2], [2, 2], 'same');\n    out = convWithBatchNorm(out, params.conv1);\n    out = tf.maxPool(out, [2, 2], [2, 2], 'same');\n    out = convWithBatchNorm(out, params.conv2);\n    out = tf.maxPool(out, [2, 2], [2, 2], 'same');\n    out = convWithBatchNorm(out, params.conv3);\n    out = tf.maxPool(out, [2, 2], [2, 2], 'same');\n    out = convWithBatchNorm(out, params.conv4);\n    out = tf.maxPool(out, [2, 2], [2, 2], 'same');\n    out = convWithBatchNorm(out, params.conv5);\n    out = tf.maxPool(out, [2, 2], [1, 1], 'same');\n    out = convWithBatchNorm(out, params.conv6);\n    out = convWithBatchNorm(out, params.conv7);\n    return convLayer(out, params.conv8, 'valid', false);\n  };\n\n  TinyYolov2Base.prototype.runMobilenet = function (x, params) {\n    var out = this.config.isFirstLayerConv2d ? leaky(convLayer(x, params.conv0, 'valid', false)) : depthwiseSeparableConv(x, params.conv0);\n    out = tf.maxPool(out, [2, 2], [2, 2], 'same');\n    out = depthwiseSeparableConv(out, params.conv1);\n    out = tf.maxPool(out, [2, 2], [2, 2], 'same');\n    out = depthwiseSeparableConv(out, params.conv2);\n    out = tf.maxPool(out, [2, 2], [2, 2], 'same');\n    out = depthwiseSeparableConv(out, params.conv3);\n    out = tf.maxPool(out, [2, 2], [2, 2], 'same');\n    out = depthwiseSeparableConv(out, params.conv4);\n    out = tf.maxPool(out, [2, 2], [2, 2], 'same');\n    out = depthwiseSeparableConv(out, params.conv5);\n    out = tf.maxPool(out, [2, 2], [1, 1], 'same');\n    out = params.conv6 ? depthwiseSeparableConv(out, params.conv6) : out;\n    out = params.conv7 ? depthwiseSeparableConv(out, params.conv7) : out;\n    return convLayer(out, params.conv8, 'valid', false);\n  };\n\n  TinyYolov2Base.prototype.forwardInput = function (input, inputSize) {\n    var _this = this;\n\n    var params = this.params;\n\n    if (!params) {\n      throw new Error('TinyYolov2 - load model before inference');\n    }\n\n    return tf.tidy(function () {\n      var batchTensor = input.toBatchTensor(inputSize, false).toFloat();\n      batchTensor = _this.config.meanRgb ? normalize(batchTensor, _this.config.meanRgb) : batchTensor;\n      batchTensor = batchTensor.div(tf.scalar(256));\n      return _this.config.withSeparableConvs ? _this.runMobilenet(batchTensor, params) : _this.runTinyYolov2(batchTensor, params);\n    });\n  };\n\n  TinyYolov2Base.prototype.forward = function (input, inputSize) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.forwardInput;\n            return [4\n            /*yield*/\n            , toNetInput(input)];\n\n          case 1:\n            return [4\n            /*yield*/\n            , _a.apply(this, [_b.sent(), inputSize])];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n        }\n      });\n    });\n  };\n\n  TinyYolov2Base.prototype.detect = function (input, forwardParams) {\n    if (forwardParams === void 0) {\n      forwardParams = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, inputSize, scoreThreshold, netInput, out, out0, inputDimensions, results, boxes, scores, classScores, classNames, indices, detections;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = new TinyYolov2Options(forwardParams), inputSize = _a.inputSize, scoreThreshold = _a.scoreThreshold;\n            return [4\n            /*yield*/\n            , toNetInput(input)];\n\n          case 1:\n            netInput = _b.sent();\n            return [4\n            /*yield*/\n            , this.forwardInput(netInput, inputSize)];\n\n          case 2:\n            out = _b.sent();\n            out0 = tf.tidy(function () {\n              return tf.unstack(out)[0].expandDims();\n            });\n            inputDimensions = {\n              width: netInput.getInputWidth(0),\n              height: netInput.getInputHeight(0)\n            };\n            return [4\n            /*yield*/\n            , this.extractBoxes(out0, netInput.getReshapedInputDimensions(0), scoreThreshold)];\n\n          case 3:\n            results = _b.sent();\n            out.dispose();\n            out0.dispose();\n            boxes = results.map(function (res) {\n              return res.box;\n            });\n            scores = results.map(function (res) {\n              return res.score;\n            });\n            classScores = results.map(function (res) {\n              return res.classScore;\n            });\n            classNames = results.map(function (res) {\n              return _this.config.classes[res.label];\n            });\n            indices = nonMaxSuppression(boxes.map(function (box) {\n              return box.rescale(inputSize);\n            }), scores, this.config.iouThreshold, true);\n            detections = indices.map(function (idx) {\n              return new ObjectDetection(scores[idx], classScores[idx], classNames[idx], boxes[idx], inputDimensions);\n            });\n            return [2\n            /*return*/\n            , detections];\n        }\n      });\n    });\n  };\n\n  TinyYolov2Base.prototype.getDefaultModelName = function () {\n    return '';\n  };\n\n  TinyYolov2Base.prototype.extractParamsFromWeigthMap = function (weightMap) {\n    return extractParamsFromWeigthMap(weightMap, this.config);\n  };\n\n  TinyYolov2Base.prototype.extractParams = function (weights) {\n    var filterSizes = this.config.filterSizes || TinyYolov2Base.DEFAULT_FILTER_SIZES;\n    var numFilters = filterSizes ? filterSizes.length : undefined;\n\n    if (numFilters !== 7 && numFilters !== 8 && numFilters !== 9) {\n      throw new Error(\"TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found \" + numFilters + \" filterSizes in config\");\n    }\n\n    return extractParams(weights, this.config, this.boxEncodingSize, filterSizes);\n  };\n\n  TinyYolov2Base.prototype.extractBoxes = function (outputTensor, inputBlobDimensions, scoreThreshold) {\n    return __awaiter(this, void 0, void 0, function () {\n      var width, height, inputSize, correctionFactorX, correctionFactorY, numCells, numBoxes, _a, boxesTensor, scoresTensor, classScoresTensor, results, scoresData, boxesData, row, col, anchor, score, ctX, ctY, width_1, height_1, x, y, pos, _b, classScore, label, _c;\n\n      var _this = this;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            width = inputBlobDimensions.width, height = inputBlobDimensions.height;\n            inputSize = Math.max(width, height);\n            correctionFactorX = inputSize / width;\n            correctionFactorY = inputSize / height;\n            numCells = outputTensor.shape[1];\n            numBoxes = this.config.anchors.length;\n            _a = tf.tidy(function () {\n              var reshaped = outputTensor.reshape([numCells, numCells, numBoxes, _this.boxEncodingSize]);\n              var boxes = reshaped.slice([0, 0, 0, 0], [numCells, numCells, numBoxes, 4]);\n              var scores = reshaped.slice([0, 0, 0, 4], [numCells, numCells, numBoxes, 1]);\n              var classScores = _this.withClassScores ? tf.softmax(reshaped.slice([0, 0, 0, 5], [numCells, numCells, numBoxes, _this.config.classes.length]), 3) : tf.scalar(0);\n              return [boxes, scores, classScores];\n            }), boxesTensor = _a[0], scoresTensor = _a[1], classScoresTensor = _a[2];\n            results = [];\n            return [4\n            /*yield*/\n            , scoresTensor.array()];\n\n          case 1:\n            scoresData = _d.sent();\n            return [4\n            /*yield*/\n            , boxesTensor.array()];\n\n          case 2:\n            boxesData = _d.sent();\n            row = 0;\n            _d.label = 3;\n\n          case 3:\n            if (!(row < numCells)) return [3\n            /*break*/\n            , 12];\n            col = 0;\n            _d.label = 4;\n\n          case 4:\n            if (!(col < numCells)) return [3\n            /*break*/\n            , 11];\n            anchor = 0;\n            _d.label = 5;\n\n          case 5:\n            if (!(anchor < numBoxes)) return [3\n            /*break*/\n            , 10];\n            score = sigmoid(scoresData[row][col][anchor][0]);\n            if (!(!scoreThreshold || score > scoreThreshold)) return [3\n            /*break*/\n            , 9];\n            ctX = (col + sigmoid(boxesData[row][col][anchor][0])) / numCells * correctionFactorX;\n            ctY = (row + sigmoid(boxesData[row][col][anchor][1])) / numCells * correctionFactorY;\n            width_1 = Math.exp(boxesData[row][col][anchor][2]) * this.config.anchors[anchor].x / numCells * correctionFactorX;\n            height_1 = Math.exp(boxesData[row][col][anchor][3]) * this.config.anchors[anchor].y / numCells * correctionFactorY;\n            x = ctX - width_1 / 2;\n            y = ctY - height_1 / 2;\n            pos = {\n              row: row,\n              col: col,\n              anchor: anchor\n            };\n            if (!this.withClassScores) return [3\n            /*break*/\n            , 7];\n            return [4\n            /*yield*/\n            , this.extractPredictedClass(classScoresTensor, pos)];\n\n          case 6:\n            _c = _d.sent();\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            _c = {\n              classScore: 1,\n              label: 0\n            };\n            _d.label = 8;\n\n          case 8:\n            _b = _c, classScore = _b.classScore, label = _b.label;\n            results.push(__assign({\n              box: new BoundingBox(x, y, x + width_1, y + height_1),\n              score: score,\n              classScore: score * classScore,\n              label: label\n            }, pos));\n            _d.label = 9;\n\n          case 9:\n            anchor++;\n            return [3\n            /*break*/\n            , 5];\n\n          case 10:\n            col++;\n            return [3\n            /*break*/\n            , 4];\n\n          case 11:\n            row++;\n            return [3\n            /*break*/\n            , 3];\n\n          case 12:\n            boxesTensor.dispose();\n            scoresTensor.dispose();\n            classScoresTensor.dispose();\n            return [2\n            /*return*/\n            , results];\n        }\n      });\n    });\n  };\n\n  TinyYolov2Base.prototype.extractPredictedClass = function (classesTensor, pos) {\n    return __awaiter(this, void 0, void 0, function () {\n      var row, col, anchor, classesData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            row = pos.row, col = pos.col, anchor = pos.anchor;\n            return [4\n            /*yield*/\n            , classesTensor.array()];\n\n          case 1:\n            classesData = _a.sent();\n            return [2\n            /*return*/\n            , Array(this.config.classes.length).fill(0).map(function (_, i) {\n              return classesData[row][col][anchor][i];\n            }).map(function (classScore, label) {\n              return {\n                classScore: classScore,\n                label: label\n              };\n            }).reduce(function (max, curr) {\n              return max.classScore > curr.classScore ? max : curr;\n            })];\n        }\n      });\n    });\n  };\n\n  TinyYolov2Base.DEFAULT_FILTER_SIZES = [3, 16, 32, 64, 128, 256, 512, 1024, 1024];\n  return TinyYolov2Base;\n}(NeuralNetwork);\n\nexport { TinyYolov2Base };","map":{"version":3,"mappings":"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","names":["tf","BoundingBox","ObjectDetection","convLayer","toNetInput","NeuralNetwork","sigmoid","nonMaxSuppression","normalize","validateConfig","convWithBatchNorm","depthwiseSeparableConv","extractParams","extractParamsFromWeigthMap","leaky","TinyYolov2Options","__extends","config","_super","_this","_config","Object","TinyYolov2Base","withClassScores","classes","length","x","params","out","conv0","maxPool","conv1","conv2","conv3","conv4","conv5","conv6","conv7","conv8","isFirstLayerConv2d","input","inputSize","Error","tidy","batchTensor","toBatchTensor","toFloat","meanRgb","div","scalar","withSeparableConvs","runMobilenet","runTinyYolov2","_a","forwardInput","_b","forwardParams","scoreThreshold","netInput","out0","unstack","expandDims","inputDimensions","width","getInputWidth","height","getInputHeight","extractBoxes","getReshapedInputDimensions","results","dispose","boxes","map","box","scores","score","classScores","classScore","classNames","res","label","indices","rescale","iouThreshold","detections","idx","weightMap","weights","filterSizes","DEFAULT_FILTER_SIZES","numFilters","undefined","boxEncodingSize","outputTensor","inputBlobDimensions","Math","max","correctionFactorX","correctionFactorY","numCells","shape","numBoxes","anchors","reshaped","reshape","slice","softmax","boxesTensor","scoresTensor","classScoresTensor","array","scoresData","_d","boxesData","row","col","anchor","ctX","ctY","width_1","exp","height_1","y","pos","extractPredictedClass","_c","push","__assign","classesTensor","classesData","Array","fill","_","i","reduce","curr"],"sources":["../../../src/tinyYolov2/TinyYolov2Base.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}