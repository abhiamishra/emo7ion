{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hurle\\\\School\\\\Spring 2022\\\\AIM\\\\emo7ion3\\\\emo7ion\\\\App\\\\src\\\\pages\\\\video.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, Component } from 'react';\nimport TFToVideo from './TFToVideo';\nimport { sendToModel } from './model';\nimport DoughnutChart from './Components/DoughnutChart';\n/*\r\nimport { render } from 'react-dom';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nclass DoughnutChart extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.chartReference = React.createRef();\r\n    this.state = {\r\n      name: 'React',\r\n      data: {\r\n        labels: ['Red', 'Green', 'Blue'],\r\n        datasets: [{\r\n          data: [5, 7, 6],\r\n          backgroundColor: ['red', 'green', 'blue']\r\n        }]\r\n      }\r\n    };\r\n\r\n    setInterval(() => {\r\n      const chart = this.chartReference.current.chartInstance;\r\n      chart.data.datasets[0].data = [\r\n        Math.floor(Math.random() * 10) + 1,\r\n        Math.floor(Math.random() * 10) + 1,\r\n        Math.floor(Math.random() * 10) + 1\r\n      ];\r\n      chart.update();\r\n    }, 2000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DoughnutChart ref={this.chartReference} data={this.state.data} />\r\n    );\r\n  }\r\n}\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet _stream;\n\nvar image = '';\nvar currentEmotion = \"SAD\";\nconst placeholderText = [\"Angry\", \"Disgust\", \"Fear\", \"Happy\", \"Sad\", \"Surprise\", \"Neutral\"];\n\nfunction Video() {\n  _s();\n\n  const [index, setIndex] = useState(0);\n  const camaraRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(function (stream) {\n      _stream = stream;\n      camaraRef.current.srcObject = stream;\n    }).catch(function (err0r) {\n      console.log('Something went wrong!', err0r);\n    });\n\n    const timer = () => {\n      setIndex(prevIndex => {\n        if (prevIndex === placeholderText.length - 1) {\n          return 0;\n        }\n\n        return prevIndex + 1;\n      });\n    };\n\n    setInterval(timer, 10000);\n    return () => {\n      if (_stream) {\n        _stream.getTracks().forEach(function (track) {\n          track.stop();\n        });\n      }\n\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"align\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"navi\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          style: {\n            width: '700px',\n            height: '500px'\n          },\n          autoPlay: true,\n          muted: true,\n          controls: true,\n          id: \"videoId\",\n          ref: camaraRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"infoi\",\n        children: /*#__PURE__*/_jsxDEV(TFToVideo, {\n          videoId: \"videoId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"containerLeft\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" Current Emotion: \", placeholderText[index]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Video, \"vWZ5dt9h/wVELxBFMFDil5tFXjI=\");\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["C:/Users/hurle/School/Spring 2022/AIM/emo7ion3/emo7ion/App/src/pages/video.js"],"names":["React","useEffect","useState","useRef","Component","TFToVideo","sendToModel","DoughnutChart","_stream","image","currentEmotion","placeholderText","Video","index","setIndex","camaraRef","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err0r","console","log","timer","prevIndex","length","setInterval","getTracks","forEach","track","stop","clearInterval","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, Component } from 'react';\r\nimport TFToVideo from './TFToVideo';\r\nimport {sendToModel} from './model'\r\n\r\n\r\nimport DoughnutChart from './Components/DoughnutChart';\r\n/*\r\nimport { render } from 'react-dom';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nclass DoughnutChart extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.chartReference = React.createRef();\r\n    this.state = {\r\n      name: 'React',\r\n      data: {\r\n        labels: ['Red', 'Green', 'Blue'],\r\n        datasets: [{\r\n          data: [5, 7, 6],\r\n          backgroundColor: ['red', 'green', 'blue']\r\n        }]\r\n      }\r\n    };\r\n\r\n    setInterval(() => {\r\n      const chart = this.chartReference.current.chartInstance;\r\n      chart.data.datasets[0].data = [\r\n        Math.floor(Math.random() * 10) + 1,\r\n        Math.floor(Math.random() * 10) + 1,\r\n        Math.floor(Math.random() * 10) + 1\r\n      ];\r\n      chart.update();\r\n    }, 2000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DoughnutChart ref={this.chartReference} data={this.state.data} />\r\n    );\r\n  }\r\n}\r\n*/\r\n\r\nlet _stream;\r\nvar image = ''\r\nvar currentEmotion = \"SAD\"\r\nconst placeholderText = [\"Angry\", \"Disgust\", \"Fear\", \"Happy\", \"Sad\", \"Surprise\", \"Neutral\"];\r\n\r\nfunction Video() {\r\n  const [index, setIndex] = useState(0);\r\n    const camaraRef = useRef();\r\n    useEffect(() => {\r\n      navigator.mediaDevices\r\n        .getUserMedia({ video: true })\r\n        .then(function (stream) {\r\n          _stream = stream;\r\n          camaraRef.current.srcObject = stream;\r\n        })\r\n        .catch(function (err0r) {\r\n          console.log('Something went wrong!', err0r);\r\n        });\r\n        const timer = () => {\r\n          setIndex(prevIndex => {\r\n            if(prevIndex === placeholderText.length - 1){\r\n              return 0;\r\n            }\r\n            return prevIndex + 1;\r\n          })\r\n        };\r\n        setInterval(timer,10000);\r\n\r\n      return () => {\r\n        if (_stream) {\r\n          _stream.getTracks().forEach(function (track) {\r\n            track.stop();\r\n          });\r\n        }\r\n        clearInterval(timer);\r\n      };\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n      <div id = 'align'>\r\n        <div id=\"container\">\r\n            <div id=\"navi\">\r\n                <video\r\n                    style={{ width: '700px', height: '500px'}}\r\n                    autoPlay\r\n                    muted\r\n                    controls\r\n                    id=\"videoId\"\r\n                    ref={camaraRef}\r\n                ></video>\r\n            </div>\r\n            <div id=\"infoi\">\r\n                <TFToVideo videoId=\"videoId\"></TFToVideo>\r\n            </div>\r\n        </div>\r\n        <div id = 'containerLeft'>\r\n          <h2> Current Emotion: {placeholderText[index]}</h2>\r\n            \r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n\r\nexport default Video\r\n"]},"metadata":{},"sourceType":"module"}