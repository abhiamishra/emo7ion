{"ast":null,"code":"function Utils(errorOutputId) {\n  // eslint-disable-line no-unused-vars\n  let self = this;\n  this.errorOutput = document.getElementById(errorOutputId);\n  const OPENCV_URL = 'opencv.js';\n\n  this.loadOpenCv = function (onloadCallback) {\n    let script = document.createElement('script');\n    script.setAttribute('async', '');\n    script.setAttribute('type', 'text/javascript');\n    script.addEventListener('load', () => {\n      if (cv.getBuildInformation) {\n        console.log(cv.getBuildInformation());\n        onloadCallback();\n      } else {\n        // WASM\n        cv['onRuntimeInitialized'] = () => {\n          console.log(cv.getBuildInformation());\n          onloadCallback();\n        };\n      }\n    });\n    script.addEventListener('error', () => {\n      self.printError('Failed to load ' + OPENCV_URL);\n    });\n    script.src = OPENCV_URL;\n    let node = document.getElementsByTagName('script')[0];\n    node.parentNode.insertBefore(script, node);\n  };\n\n  this.createFileFromUrl = function (path, url, callback) {\n    let request = new XMLHttpRequest();\n    request.open('GET', url, true);\n    request.responseType = 'arraybuffer';\n\n    request.onload = function (ev) {\n      if (request.readyState === 4) {\n        if (request.status === 200) {\n          let data = new Uint8Array(request.response);\n          cv.FS_createDataFile('/', path, data, true, false, false);\n          callback();\n        } else {\n          self.printError('Failed to load ' + url + ' status: ' + request.status);\n        }\n      }\n    };\n\n    request.send();\n  };\n\n  this.loadImageToCanvas = function (url, cavansId) {\n    let canvas = document.getElementById(cavansId);\n    let ctx = canvas.getContext('2d');\n    let img = new Image();\n    img.crossOrigin = 'anonymous';\n\n    img.onload = function () {\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0, img.width, img.height);\n    };\n\n    img.src = url;\n  };\n\n  this.executeCode = function (textAreaId) {\n    try {\n      this.clearError();\n      let code = document.getElementById(textAreaId).value;\n      eval(code);\n    } catch (err) {\n      this.printError(err);\n    }\n  };\n\n  this.clearError = function () {\n    this.errorOutput.innerHTML = '';\n  };\n\n  this.printError = function (err) {\n    if (typeof err === 'undefined') {\n      err = '';\n    } else if (typeof err === 'number') {\n      if (!isNaN(err)) {\n        if (typeof cv !== 'undefined') {\n          err = 'Exception: ' + cv.exceptionFromPtr(err).msg;\n        }\n      }\n    } else if (typeof err === 'string') {\n      let ptr = Number(err.split(' ')[0]);\n\n      if (!isNaN(ptr)) {\n        if (typeof cv !== 'undefined') {\n          err = 'Exception: ' + cv.exceptionFromPtr(ptr).msg;\n        }\n      }\n    } else if (err instanceof Error) {\n      err = err.stack.replace(/\\n/g, '<br>');\n    }\n\n    this.errorOutput.innerHTML = err;\n  };\n\n  this.loadCode = function (scriptId, textAreaId) {\n    let scriptNode = document.getElementById(scriptId);\n    let textArea = document.getElementById(textAreaId);\n\n    if (scriptNode.type !== 'text/code-snippet') {\n      throw Error('Unknown code snippet type');\n    }\n\n    textArea.value = scriptNode.text.replace(/^\\n/, '');\n  };\n\n  this.addFileInputHandler = function (fileInputId, canvasId) {\n    let inputElement = document.getElementById(fileInputId);\n    inputElement.addEventListener('change', e => {\n      let files = e.target.files;\n\n      if (files.length > 0) {\n        let imgUrl = URL.createObjectURL(files[0]);\n        self.loadImageToCanvas(imgUrl, canvasId);\n      }\n    }, false);\n  };\n\n  function onVideoCanPlay() {\n    if (self.onCameraStartedCallback) {\n      self.onCameraStartedCallback(self.stream, self.video);\n    }\n  }\n\n  ;\n\n  this.startCamera = function (resolution, callback, videoId) {\n    const constraints = {\n      'qvga': {\n        width: {\n          exact: 320\n        },\n        height: {\n          exact: 240\n        }\n      },\n      'vga': {\n        width: {\n          exact: 640\n        },\n        height: {\n          exact: 480\n        }\n      }\n    };\n    let video = document.getElementById(videoId);\n\n    if (!video) {\n      video = document.createElement('video');\n    }\n\n    let videoConstraint = constraints[resolution];\n\n    if (!videoConstraint) {\n      videoConstraint = true;\n    }\n\n    navigator.mediaDevices.getUserMedia({\n      video: videoConstraint,\n      audio: false\n    }).then(function (stream) {\n      video.srcObject = stream;\n      video.play();\n      self.video = video;\n      self.stream = stream;\n      self.onCameraStartedCallback = callback;\n      video.addEventListener('canplay', onVideoCanPlay, false);\n    }).catch(function (err) {\n      self.printError('Camera Error: ' + err.name + ' ' + err.message);\n    });\n  };\n\n  this.stopCamera = function () {\n    if (this.video) {\n      this.video.pause();\n      this.video.srcObject = null;\n      this.video.removeEventListener('canplay', onVideoCanPlay);\n    }\n\n    if (this.stream) {\n      this.stream.getVideoTracks()[0].stop();\n    }\n  };\n}\n\n_c = Utils;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Utils\");","map":{"version":3,"sources":["C:/Users/hurle/School/Spring 2022/AIM/emo7ion3/emo7ion/App/src/pages/video_files/utils.js"],"names":["Utils","errorOutputId","self","errorOutput","document","getElementById","OPENCV_URL","loadOpenCv","onloadCallback","script","createElement","setAttribute","addEventListener","cv","getBuildInformation","console","log","printError","src","node","getElementsByTagName","parentNode","insertBefore","createFileFromUrl","path","url","callback","request","XMLHttpRequest","open","responseType","onload","ev","readyState","status","data","Uint8Array","response","FS_createDataFile","send","loadImageToCanvas","cavansId","canvas","ctx","getContext","img","Image","crossOrigin","width","height","drawImage","executeCode","textAreaId","clearError","code","value","eval","err","innerHTML","isNaN","exceptionFromPtr","msg","ptr","Number","split","Error","stack","replace","loadCode","scriptId","scriptNode","textArea","type","text","addFileInputHandler","fileInputId","canvasId","inputElement","e","files","target","length","imgUrl","URL","createObjectURL","onVideoCanPlay","onCameraStartedCallback","stream","video","startCamera","resolution","videoId","constraints","exact","videoConstraint","navigator","mediaDevices","getUserMedia","audio","then","srcObject","play","catch","name","message","stopCamera","pause","removeEventListener","getVideoTracks","stop"],"mappings":"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","sourcesContent":["function Utils(errorOutputId) { // eslint-disable-line no-unused-vars\n    let self = this;\n    this.errorOutput = document.getElementById(errorOutputId);\n\n    const OPENCV_URL = 'opencv.js';\n    this.loadOpenCv = function(onloadCallback) {\n        let script = document.createElement('script');\n        script.setAttribute('async', '');\n        script.setAttribute('type', 'text/javascript');\n        script.addEventListener('load', () => {\n            if (cv.getBuildInformation)\n            {\n                console.log(cv.getBuildInformation());\n                onloadCallback();\n            }\n            else\n            {\n                // WASM\n                cv['onRuntimeInitialized']=()=>{\n                    console.log(cv.getBuildInformation());\n                    onloadCallback();\n                }\n            }\n        });\n        script.addEventListener('error', () => {\n            self.printError('Failed to load ' + OPENCV_URL);\n        });\n        script.src = OPENCV_URL;\n        let node = document.getElementsByTagName('script')[0];\n        node.parentNode.insertBefore(script, node);\n    };\n\n    this.createFileFromUrl = function(path, url, callback) {\n        let request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function(ev) {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    let data = new Uint8Array(request.response);\n                    cv.FS_createDataFile('/', path, data, true, false, false);\n                    callback();\n                } else {\n                    self.printError('Failed to load ' + url + ' status: ' + request.status);\n                }\n            }\n        };\n        request.send();\n    };\n\n    this.loadImageToCanvas = function(url, cavansId) {\n        let canvas = document.getElementById(cavansId);\n        let ctx = canvas.getContext('2d');\n        let img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.onload = function() {\n            canvas.width = img.width;\n            canvas.height = img.height;\n            ctx.drawImage(img, 0, 0, img.width, img.height);\n        };\n        img.src = url;\n    };\n\n    this.executeCode = function(textAreaId) {\n        try {\n            this.clearError();\n            let code = document.getElementById(textAreaId).value;\n            eval(code);\n        } catch (err) {\n            this.printError(err);\n        }\n    };\n\n    this.clearError = function() {\n        this.errorOutput.innerHTML = '';\n    };\n\n    this.printError = function(err) {\n        if (typeof err === 'undefined') {\n            err = '';\n        } else if (typeof err === 'number') {\n            if (!isNaN(err)) {\n                if (typeof cv !== 'undefined') {\n                    err = 'Exception: ' + cv.exceptionFromPtr(err).msg;\n                }\n            }\n        } else if (typeof err === 'string') {\n            let ptr = Number(err.split(' ')[0]);\n            if (!isNaN(ptr)) {\n                if (typeof cv !== 'undefined') {\n                    err = 'Exception: ' + cv.exceptionFromPtr(ptr).msg;\n                }\n            }\n        } else if (err instanceof Error) {\n            err = err.stack.replace(/\\n/g, '<br>');\n        }\n        this.errorOutput.innerHTML = err;\n    };\n\n    this.loadCode = function(scriptId, textAreaId) {\n        let scriptNode = document.getElementById(scriptId);\n        let textArea = document.getElementById(textAreaId);\n        if (scriptNode.type !== 'text/code-snippet') {\n            throw Error('Unknown code snippet type');\n        }\n        textArea.value = scriptNode.text.replace(/^\\n/, '');\n    };\n\n    this.addFileInputHandler = function(fileInputId, canvasId) {\n        let inputElement = document.getElementById(fileInputId);\n        inputElement.addEventListener('change', (e) => {\n            let files = e.target.files;\n            if (files.length > 0) {\n                let imgUrl = URL.createObjectURL(files[0]);\n                self.loadImageToCanvas(imgUrl, canvasId);\n            }\n        }, false);\n    };\n\n    function onVideoCanPlay() {\n        if (self.onCameraStartedCallback) {\n            self.onCameraStartedCallback(self.stream, self.video);\n        }\n    };\n\n    this.startCamera = function(resolution, callback, videoId) {\n        const constraints = {\n            'qvga': {width: {exact: 320}, height: {exact: 240}},\n            'vga': {width: {exact: 640}, height: {exact: 480}}};\n        let video = document.getElementById(videoId);\n        if (!video) {\n            video = document.createElement('video');\n        }\n\n        let videoConstraint = constraints[resolution];\n        if (!videoConstraint) {\n            videoConstraint = true;\n        }\n\n        navigator.mediaDevices.getUserMedia({video: videoConstraint, audio: false})\n            .then(function(stream) {\n                video.srcObject = stream;\n                video.play();\n                self.video = video;\n                self.stream = stream;\n                self.onCameraStartedCallback = callback;\n                video.addEventListener('canplay', onVideoCanPlay, false);\n            })\n            .catch(function(err) {\n                self.printError('Camera Error: ' + err.name + ' ' + err.message);\n            });\n    };\n\n    this.stopCamera = function() {\n        if (this.video) {\n            this.video.pause();\n            this.video.srcObject = null;\n            this.video.removeEventListener('canplay', onVideoCanPlay);\n        }\n        if (this.stream) {\n            this.stream.getVideoTracks()[0].stop();\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}