{"ast":null,"code":"var _jsxFileName = \"/Users/akshitaanand/Documents/GitHub/emotion/App/src/pages/video.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as faceApi from \"face-api.js\";\nimport models from './models';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst expressionMap = {\n  neutral: \"ðŸ˜¶\",\n  happy: \"ðŸ˜„\",\n  sad: \"ðŸ˜ž\",\n  angry: \"ðŸ¤¬\",\n  fearful: \"ðŸ˜–\",\n  disgusted: \"ðŸ¤¢\",\n  surprised: \"ðŸ˜²\"\n};\n\nclass Video extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.video = /*#__PURE__*/React.createRef();\n    this.state = {\n      expressions: []\n    };\n\n    this.log = function () {\n      console.log(...arguments);\n    };\n\n    this.run = async () => {\n      this.log(\"run started\");\n\n      try {\n        await faceApi.nets.tinyFaceDetector.load('/models/');\n        await faceApi.loadFaceExpressionModel('/models/');\n        this.mediaStream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: \"user\"\n          }\n        });\n        this.video.current.srcObject = this.mediaStream;\n      } catch (e) {\n        this.log(e.name, e.message, e.stack);\n      }\n    };\n\n    this.onPlay = async () => {\n      if (this.video.current.paused || this.video.current.ended || !faceApi.nets.tinyFaceDetector.params) {\n        setTimeout(() => this.onPlay());\n        return;\n      }\n\n      const options = new faceApi.TinyFaceDetectorOptions({\n        inputSize: 512,\n        scoreThreshold: 0.5\n      });\n      const result = await faceApi.detectSingleFace(this.video.current, options).withFaceExpressions();\n\n      if (result) {\n        this.log(result);\n        const expressions = result.expressions.reduce((acc, _ref) => {\n          let {\n            expression,\n            probability\n          } = _ref;\n          acc.push([expressionMap[expression], probability]);\n          return acc;\n        }, []);\n        this.log(expressions);\n        this.setState(() => ({\n          expressions\n        }));\n      }\n\n      setTimeout(() => this.onPlay(), 1000);\n    };\n  }\n\n  componentDidMount() {\n    this.run();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Face Recognition Webcam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.expressions.sort((a, b) => b[1] - a[1]).filter((_, i) => i < 3).map(_ref2 => {\n          let [e, w] = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [e, \" \", w]\n          }, e + w, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"100vh\",\n          position: \"relative\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: this.video,\n          autoPlay: true,\n          muted: true,\n          onPlay: this.onPlay,\n          style: {\n            position: \"absolute\",\n            width: \"100%\",\n            height: \"100vh\",\n            left: 0,\n            right: 0,\n            bottom: 0,\n            top: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Video;","map":{"version":3,"sources":["/Users/akshitaanand/Documents/GitHub/emotion/App/src/pages/video.js"],"names":["React","ReactDOM","faceApi","models","expressionMap","neutral","happy","sad","angry","fearful","disgusted","surprised","Video","Component","video","createRef","state","expressions","log","console","run","nets","tinyFaceDetector","load","loadFaceExpressionModel","mediaStream","navigator","mediaDevices","getUserMedia","facingMode","current","srcObject","e","name","message","stack","onPlay","paused","ended","params","setTimeout","options","TinyFaceDetectorOptions","inputSize","scoreThreshold","result","detectSingleFace","withFaceExpressions","reduce","acc","expression","probability","push","setState","componentDidMount","render","sort","a","b","filter","_","i","map","w","width","height","position","left","right","bottom","top"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as faceApi from \"face-api.js\";\nimport models from './models'\n\nconst expressionMap = {\n    neutral: \"ðŸ˜¶\",\n    happy: \"ðŸ˜„\",\n    sad: \"ðŸ˜ž\",\n    angry: \"ðŸ¤¬\",\n    fearful: \"ðŸ˜–\",\n    disgusted: \"ðŸ¤¢\",\n    surprised: \"ðŸ˜²\"\n  };\n\nclass Video extends React.Component {\n  video = React.createRef();\n\n  state = { expressions: [] };\n\n  componentDidMount() {\n    this.run();\n  }\n\n  log = (...args) => {\n    console.log(...args);\n  };\n\n  run = async () => {\n    this.log(\"run started\");\n    try {\n      await faceApi.nets.tinyFaceDetector.load('/models/');\n      await faceApi.loadFaceExpressionModel('/models/');\n      this.mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: { facingMode: \"user\" }\n      });\n\n      this.video.current.srcObject = this.mediaStream;\n    } catch (e) {\n      this.log(e.name, e.message, e.stack);\n    }\n  };\n\n  onPlay = async () => {\n    if (\n      this.video.current.paused ||\n      this.video.current.ended ||\n      !faceApi.nets.tinyFaceDetector.params\n    ) {\n      setTimeout(() => this.onPlay());\n      return;\n    }\n\n    const options = new faceApi.TinyFaceDetectorOptions({\n      inputSize: 512,\n      scoreThreshold: 0.5\n    });\n\n    const result = await faceApi\n      .detectSingleFace(this.video.current, options)\n      .withFaceExpressions();\n\n    if (result) {\n      this.log(result);\n      const expressions = result.expressions.reduce(\n        (acc, { expression, probability }) => {\n          acc.push([expressionMap[expression], probability]);\n          return acc;\n        },\n        []\n      );\n      this.log(expressions);\n      this.setState(() => ({ expressions }));\n    }\n\n    setTimeout(() => this.onPlay(), 1000);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Face Recognition Webcam</h1>\n        <div>\n          {this.state.expressions\n            .sort((a, b) => b[1] - a[1])\n            .filter((_, i) => i < 3)\n            .map(([e, w]) => (\n              <p key={e + w}>\n                {e} {w}\n              </p>\n            ))}\n        </div>\n        <div style={{ width: \"100%\", height: \"100vh\", position: \"relative\" }}>\n          <video\n            ref={this.video}\n            autoPlay\n            muted\n            onPlay={this.onPlay}\n            style={{\n              position: \"absolute\",\n              width: \"100%\",\n              height: \"100vh\",\n              left: 0,\n              right: 0,\n              bottom: 0,\n              top: 0\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Video"]},"metadata":{},"sourceType":"module"}