{"ast":null,"code":"import { extractConvParamsFactory, extractSeparableConvParamsFactory, extractWeightsFactory } from '../common';\nimport { range } from '../utils';\n\nfunction extractorsFactory(extractWeights, paramMappings) {\n  var extractConvParams = extractConvParamsFactory(extractWeights, paramMappings);\n  var extractSeparableConvParams = extractSeparableConvParamsFactory(extractWeights, paramMappings);\n\n  function extractReductionBlockParams(channelsIn, channelsOut, mappedPrefix) {\n    var separable_conv0 = extractSeparableConvParams(channelsIn, channelsOut, mappedPrefix + \"/separable_conv0\");\n    var separable_conv1 = extractSeparableConvParams(channelsOut, channelsOut, mappedPrefix + \"/separable_conv1\");\n    var expansion_conv = extractConvParams(channelsIn, channelsOut, 1, mappedPrefix + \"/expansion_conv\");\n    return {\n      separable_conv0: separable_conv0,\n      separable_conv1: separable_conv1,\n      expansion_conv: expansion_conv\n    };\n  }\n\n  function extractMainBlockParams(channels, mappedPrefix) {\n    var separable_conv0 = extractSeparableConvParams(channels, channels, mappedPrefix + \"/separable_conv0\");\n    var separable_conv1 = extractSeparableConvParams(channels, channels, mappedPrefix + \"/separable_conv1\");\n    var separable_conv2 = extractSeparableConvParams(channels, channels, mappedPrefix + \"/separable_conv2\");\n    return {\n      separable_conv0: separable_conv0,\n      separable_conv1: separable_conv1,\n      separable_conv2: separable_conv2\n    };\n  }\n\n  return {\n    extractConvParams: extractConvParams,\n    extractSeparableConvParams: extractSeparableConvParams,\n    extractReductionBlockParams: extractReductionBlockParams,\n    extractMainBlockParams: extractMainBlockParams\n  };\n}\n\nexport function extractParams(weights, numMainBlocks) {\n  var paramMappings = [];\n\n  var _a = extractWeightsFactory(weights),\n      extractWeights = _a.extractWeights,\n      getRemainingWeights = _a.getRemainingWeights;\n\n  var _b = extractorsFactory(extractWeights, paramMappings),\n      extractConvParams = _b.extractConvParams,\n      extractSeparableConvParams = _b.extractSeparableConvParams,\n      extractReductionBlockParams = _b.extractReductionBlockParams,\n      extractMainBlockParams = _b.extractMainBlockParams;\n\n  var entry_flow_conv_in = extractConvParams(3, 32, 3, 'entry_flow/conv_in');\n  var entry_flow_reduction_block_0 = extractReductionBlockParams(32, 64, 'entry_flow/reduction_block_0');\n  var entry_flow_reduction_block_1 = extractReductionBlockParams(64, 128, 'entry_flow/reduction_block_1');\n  var entry_flow = {\n    conv_in: entry_flow_conv_in,\n    reduction_block_0: entry_flow_reduction_block_0,\n    reduction_block_1: entry_flow_reduction_block_1\n  };\n  var middle_flow = {};\n  range(numMainBlocks, 0, 1).forEach(function (idx) {\n    middle_flow[\"main_block_\" + idx] = extractMainBlockParams(128, \"middle_flow/main_block_\" + idx);\n  });\n  var exit_flow_reduction_block = extractReductionBlockParams(128, 256, 'exit_flow/reduction_block');\n  var exit_flow_separable_conv = extractSeparableConvParams(256, 512, 'exit_flow/separable_conv');\n  var exit_flow = {\n    reduction_block: exit_flow_reduction_block,\n    separable_conv: exit_flow_separable_conv\n  };\n\n  if (getRemainingWeights().length !== 0) {\n    throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\n  }\n\n  return {\n    paramMappings: paramMappings,\n    params: {\n      entry_flow: entry_flow,\n      middle_flow: middle_flow,\n      exit_flow: exit_flow\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["extractConvParamsFactory","extractSeparableConvParamsFactory","extractWeightsFactory","range","extractorsFactory","extractWeights","paramMappings","extractConvParams","extractSeparableConvParams","extractReductionBlockParams","channelsIn","channelsOut","mappedPrefix","separable_conv0","separable_conv1","expansion_conv","extractMainBlockParams","channels","separable_conv2","extractParams","weights","numMainBlocks","getRemainingWeights","entry_flow_conv_in","entry_flow_reduction_block_0","entry_flow_reduction_block_1","entry_flow","conv_in","reduction_block_0","reduction_block_1","middle_flow","forEach","idx","exit_flow_reduction_block","exit_flow_separable_conv","exit_flow","reduction_block","separable_conv","length","Error","params"],"sources":["../../../src/xception/extractParams.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}