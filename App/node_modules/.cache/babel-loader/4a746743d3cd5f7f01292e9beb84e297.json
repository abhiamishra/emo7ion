{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n    Constants\n*/\n\nvar errorMessages_1 = __importDefault(require(\"../constants/errorMessages\"));\n/*\n    Utils\n*/\n\n\nvar respond_1 = __importDefault(require(\"../../utils/respond\"));\n\nvar request_1 = __importDefault(require(\"../../utils/request\"));\n\nvar purgeCache = function (url, defaultOptions, callback) {\n  if (!url && !url.length) {\n    respond_1.default(true, errorMessages_1.default.CACHE_PURGE_URL_MISSING, callback);\n    return;\n  }\n\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/files/purge\",\n    method: \"POST\",\n    json: {\n      url: url\n    }\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n\nvar getPurgeCacheStatus = function (requestId, defaultOptions, callback) {\n  if (!requestId && !requestId.length) {\n    respond_1.default(true, errorMessages_1.default.CACHE_PURGE_STATUS_ID_MISSING, callback);\n    return;\n  }\n\n  var requestOptions = {\n    url: \"https://api.imagekit.io/v1/files/purge/\" + requestId,\n    method: \"GET\",\n    json: true\n  };\n  request_1.default(requestOptions, defaultOptions, callback);\n};\n\nexports.default = {\n  purgeCache: purgeCache,\n  getPurgeCacheStatus: getPurgeCacheStatus\n};","map":{"version":3,"sources":["/Users/akshitaanand/Documents/GitHub/emotion/App/node_modules/imagekit/dist/libs/manage/cache.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","errorMessages_1","require","respond_1","request_1","purgeCache","url","defaultOptions","callback","length","default","CACHE_PURGE_URL_MISSING","requestOptions","method","json","getPurgeCacheStatus","requestId","CACHE_PURGE_STATUS_ID_MISSING"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;;AACA,IAAIC,eAAe,GAAGP,eAAe,CAACQ,OAAO,CAAC,4BAAD,CAAR,CAArC;AACA;AACA;AACA;;;AACA,IAAIC,SAAS,GAAGT,eAAe,CAACQ,OAAO,CAAC,qBAAD,CAAR,CAA/B;;AACA,IAAIE,SAAS,GAAGV,eAAe,CAACQ,OAAO,CAAC,qBAAD,CAAR,CAA/B;;AACA,IAAIG,UAAU,GAAG,UAAUC,GAAV,EAAeC,cAAf,EAA+BC,QAA/B,EAAyC;AACtD,MAAI,CAACF,GAAD,IAAQ,CAACA,GAAG,CAACG,MAAjB,EAAyB;AACrBN,IAAAA,SAAS,CAACO,OAAV,CAAkB,IAAlB,EAAwBT,eAAe,CAACS,OAAhB,CAAwBC,uBAAhD,EAAyEH,QAAzE;AACA;AACH;;AACD,MAAII,cAAc,GAAG;AACjBN,IAAAA,GAAG,EAAE,wCADY;AAEjBO,IAAAA,MAAM,EAAE,MAFS;AAGjBC,IAAAA,IAAI,EAAE;AACFR,MAAAA,GAAG,EAAEA;AADH;AAHW,GAArB;AAOAF,EAAAA,SAAS,CAACM,OAAV,CAAkBE,cAAlB,EAAkCL,cAAlC,EAAkDC,QAAlD;AACH,CAbD;;AAcA,IAAIO,mBAAmB,GAAG,UAAUC,SAAV,EAAqBT,cAArB,EAAqCC,QAArC,EAA+C;AACrE,MAAI,CAACQ,SAAD,IAAc,CAACA,SAAS,CAACP,MAA7B,EAAqC;AACjCN,IAAAA,SAAS,CAACO,OAAV,CAAkB,IAAlB,EAAwBT,eAAe,CAACS,OAAhB,CAAwBO,6BAAhD,EAA+ET,QAA/E;AACA;AACH;;AACD,MAAII,cAAc,GAAG;AACjBN,IAAAA,GAAG,EAAE,4CAA4CU,SADhC;AAEjBH,IAAAA,MAAM,EAAE,KAFS;AAGjBC,IAAAA,IAAI,EAAE;AAHW,GAArB;AAKAV,EAAAA,SAAS,CAACM,OAAV,CAAkBE,cAAlB,EAAkCL,cAAlC,EAAkDC,QAAlD;AACH,CAXD;;AAYAT,OAAO,CAACW,OAAR,GAAkB;AAAEL,EAAAA,UAAU,EAAEA,UAAd;AAA0BU,EAAAA,mBAAmB,EAAEA;AAA/C,CAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n    Constants\n*/\nvar errorMessages_1 = __importDefault(require(\"../constants/errorMessages\"));\n/*\n    Utils\n*/\nvar respond_1 = __importDefault(require(\"../../utils/respond\"));\nvar request_1 = __importDefault(require(\"../../utils/request\"));\nvar purgeCache = function (url, defaultOptions, callback) {\n    if (!url && !url.length) {\n        respond_1.default(true, errorMessages_1.default.CACHE_PURGE_URL_MISSING, callback);\n        return;\n    }\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/files/purge\",\n        method: \"POST\",\n        json: {\n            url: url,\n        },\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\nvar getPurgeCacheStatus = function (requestId, defaultOptions, callback) {\n    if (!requestId && !requestId.length) {\n        respond_1.default(true, errorMessages_1.default.CACHE_PURGE_STATUS_ID_MISSING, callback);\n        return;\n    }\n    var requestOptions = {\n        url: \"https://api.imagekit.io/v1/files/purge/\" + requestId,\n        method: \"GET\",\n        json: true,\n    };\n    request_1.default(requestOptions, defaultOptions, callback);\n};\nexports.default = { purgeCache: purgeCache, getPurgeCacheStatus: getPurgeCacheStatus };\n"]},"metadata":{},"sourceType":"script"}