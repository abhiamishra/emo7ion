{"ast":null,"code":"\"use strict\";\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n/*\n    Helper Modules\n*/\n\n\nvar lodash_1 = __importDefault(require(\"lodash\"));\n\nvar errorMessages_1 = __importDefault(require(\"./libs/constants/errorMessages\"));\n\nvar manage_1 = __importDefault(require(\"./libs/manage\"));\n\nvar signature_1 = __importDefault(require(\"./libs/signature\"));\n\nvar upload_1 = __importDefault(require(\"./libs/upload\"));\n/*\n    Implementations\n*/\n\n\nvar url_1 = __importDefault(require(\"./libs/url\"));\n/*\n    Utils\n*/\n\n\nvar phash_1 = __importDefault(require(\"./utils/phash\"));\n\nvar transformation_1 = __importDefault(require(\"./utils/transformation\"));\n\nvar promisify = function (thisContext, fn) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (args.length === fn.length && typeof args[args.length - 1] !== \"undefined\") {\n      if (typeof args[args.length - 1] !== \"function\") {\n        throw new Error(\"Callback must be a function.\");\n      }\n\n      fn.call.apply(fn, __spreadArray([thisContext], args));\n    } else {\n      return new Promise(function (resolve, reject) {\n        var callback = function (err) {\n          var results = [];\n\n          for (var _i = 1; _i < arguments.length; _i++) {\n            results[_i - 1] = arguments[_i];\n          }\n\n          if (err) {\n            return reject(err);\n          } else {\n            resolve(results.length > 1 ? results : results[0]);\n          }\n        };\n\n        args.pop();\n        args.push(callback);\n        fn.call.apply(fn, __spreadArray([thisContext], args));\n      });\n    }\n  };\n};\n\nvar ImageKit =\n/** @class */\nfunction () {\n  function ImageKit(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    this.options = {\n      uploadEndpoint: \"https://upload.imagekit.io/api/v1/files/upload\",\n      publicKey: \"\",\n      privateKey: \"\",\n      urlEndpoint: \"\",\n      transformationPosition: transformation_1.default.getDefault()\n    };\n    this.options = lodash_1.default.extend(this.options, opts);\n\n    if (!this.options.publicKey) {\n      throw new Error(errorMessages_1.default.MANDATORY_PUBLIC_KEY_MISSING.message);\n    }\n\n    if (!this.options.privateKey) {\n      throw new Error(errorMessages_1.default.MANDATORY_PRIVATE_KEY_MISSING.message);\n    }\n\n    if (!this.options.urlEndpoint) {\n      throw new Error(errorMessages_1.default.MANDATORY_URL_ENDPOINT_KEY_MISSING.message);\n    }\n  }\n  /**\n   * You can add multiple origins in the same ImageKit.io account.\n   * URL endpoints allow you to configure which origins are accessible through your account and set their preference order as well.\n   *\n   * @see {@link https://github.com/imagekit-developer/imagekit-nodejs#url-generation}\n   * @see {@link https://docs.imagekit.io/integration/url-endpoints}\n   *\n   * @param urlOptions\n   */\n\n\n  ImageKit.prototype.url = function (urlOptions) {\n    return url_1.default(urlOptions, this.options);\n  };\n\n  ImageKit.prototype.upload = function (uploadOptions, callback) {\n    return promisify(this, upload_1.default)(uploadOptions, this.options, callback);\n  };\n\n  ImageKit.prototype.listFiles = function (listOptions, callback) {\n    return promisify(this, manage_1.default.listFiles)(listOptions, this.options, callback);\n  };\n\n  ImageKit.prototype.getFileDetails = function (fileId, callback) {\n    return promisify(this, manage_1.default.getFileDetails)(fileId, this.options, callback);\n  };\n\n  ImageKit.prototype.getFileMetadata = function (fileId, callback) {\n    return promisify(this, manage_1.default.getFileMetadata)(fileId, this.options, callback);\n  };\n\n  ImageKit.prototype.updateFileDetails = function (fileId, updateData, callback) {\n    return promisify(this, manage_1.default.updateFileDetails)(fileId, updateData, this.options, callback);\n  };\n\n  ImageKit.prototype.bulkAddTags = function (fileIds, tags, callback) {\n    return promisify(this, manage_1.default.bulkAddTags)(fileIds, tags, this.options, callback);\n  };\n\n  ImageKit.prototype.bulkRemoveTags = function (fileIds, tags, callback) {\n    return promisify(this, manage_1.default.bulkRemoveTags)(fileIds, tags, this.options, callback);\n  };\n\n  ImageKit.prototype.deleteFile = function (fileId, callback) {\n    return promisify(this, manage_1.default.deleteFile)(fileId, this.options, callback);\n  };\n\n  ImageKit.prototype.purgeCache = function (url, callback) {\n    return promisify(this, manage_1.default.purgeCache)(url, this.options, callback);\n  };\n\n  ImageKit.prototype.getPurgeCacheStatus = function (requestId, callback) {\n    return promisify(this, manage_1.default.getPurgeCacheStatus)(requestId, this.options, callback);\n  };\n\n  ImageKit.prototype.bulkDeleteFiles = function (fileIdArray, callback) {\n    return promisify(this, manage_1.default.bulkDeleteFiles)(fileIdArray, this.options, callback);\n  };\n\n  ImageKit.prototype.copyFile = function (sourceFilePath, destinationPath, callback) {\n    return promisify(this, manage_1.default.copyFile)(sourceFilePath, destinationPath, this.options, callback);\n  };\n\n  ImageKit.prototype.moveFile = function (sourceFilePath, destinationPath, callback) {\n    return promisify(this, manage_1.default.moveFile)(sourceFilePath, destinationPath, this.options, callback);\n  };\n\n  ImageKit.prototype.createFolder = function (folderName, parentFolderPath, callback) {\n    return promisify(this, manage_1.default.createFolder)(folderName, parentFolderPath, this.options, callback);\n  };\n\n  ImageKit.prototype.deleteFolder = function (folderPath, callback) {\n    return promisify(this, manage_1.default.deleteFolder)(folderPath, this.options, callback);\n  };\n\n  ImageKit.prototype.copyFolder = function (sourceFolderPath, destinationPath, callback) {\n    return promisify(this, manage_1.default.copyFolder)(sourceFolderPath, destinationPath, this.options, callback);\n  };\n\n  ImageKit.prototype.moveFolder = function (sourceFolderPath, destinationPath, callback) {\n    return promisify(this, manage_1.default.moveFolder)(sourceFolderPath, destinationPath, this.options, callback);\n  };\n  /**\n   * In case you are looking to implement client-side file upload, you are going to need a token, expiry timestamp, and a valid signature for that upload. The SDK provides a simple method that you can use in your code to generate these authentication parameters for you.\n   *\n   * @see {@link https://github.com/imagekit-developer/imagekit-nodejs#authentication-parameter-generation}\n   *\n   * @param token\n   * @param expire\n   */\n\n\n  ImageKit.prototype.getAuthenticationParameters = function (token, expire) {\n    return signature_1.default.getAuthenticationParameters(token, expire, this.options);\n  };\n\n  ImageKit.prototype.getBulkJobStatus = function (jobId, callback) {\n    return promisify(this, manage_1.default.getBulkJobStatus)(jobId, this.options, callback);\n  };\n  /**\n   * Perceptual hashing allows you to construct a hash value that uniquely identifies an input image based on an image's contents. ImageKit.io metadata API returns the pHash value of an image in the response. You can use this value to find a duplicate (or similar) image by calculating the distance between the two images' pHash value.\n   *\n   * This SDK exposes pHashDistance function to calculate the distance between two pHash values. It accepts two pHash hexadecimal strings and returns a numeric value indicative of the level of difference between the two images.\n   *\n   * @see {@link https://docs.imagekit.io/api-reference/metadata-api#perceptual-hash-phash}\n   *\n   * @param firstPHash\n   * @param secondPHash\n   */\n\n\n  ImageKit.prototype.pHashDistance = function (firstPHash, secondPHash) {\n    return phash_1.default.pHashDistance(firstPHash, secondPHash);\n  };\n\n  return ImageKit;\n}();\n\nmodule.exports = ImageKit;","map":{"version":3,"sources":["/Users/akshitaanand/Documents/GitHub/emotion/App/node_modules/imagekit/dist/index.js"],"names":["__spreadArray","to","from","i","il","length","j","__importDefault","mod","__esModule","lodash_1","require","errorMessages_1","manage_1","signature_1","upload_1","url_1","phash_1","transformation_1","promisify","thisContext","fn","args","_i","arguments","Error","call","apply","Promise","resolve","reject","callback","err","results","pop","push","ImageKit","opts","options","uploadEndpoint","publicKey","privateKey","urlEndpoint","transformationPosition","default","getDefault","extend","MANDATORY_PUBLIC_KEY_MISSING","message","MANDATORY_PRIVATE_KEY_MISSING","MANDATORY_URL_ENDPOINT_KEY_MISSING","prototype","url","urlOptions","upload","uploadOptions","listFiles","listOptions","getFileDetails","fileId","getFileMetadata","updateFileDetails","updateData","bulkAddTags","fileIds","tags","bulkRemoveTags","deleteFile","purgeCache","getPurgeCacheStatus","requestId","bulkDeleteFiles","fileIdArray","copyFile","sourceFilePath","destinationPath","moveFile","createFolder","folderName","parentFolderPath","deleteFolder","folderPath","copyFolder","sourceFolderPath","moveFolder","getAuthenticationParameters","token","expire","getBulkJobStatus","jobId","pHashDistance","firstPHash","secondPHash","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\n/*\n    Helper Modules\n*/\nvar lodash_1 = __importDefault(require(\"lodash\"));\nvar errorMessages_1 = __importDefault(require(\"./libs/constants/errorMessages\"));\nvar manage_1 = __importDefault(require(\"./libs/manage\"));\nvar signature_1 = __importDefault(require(\"./libs/signature\"));\nvar upload_1 = __importDefault(require(\"./libs/upload\"));\n/*\n    Implementations\n*/\nvar url_1 = __importDefault(require(\"./libs/url\"));\n/*\n    Utils\n*/\nvar phash_1 = __importDefault(require(\"./utils/phash\"));\nvar transformation_1 = __importDefault(require(\"./utils/transformation\"));\nvar promisify = function (thisContext, fn) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args.length === fn.length && typeof args[args.length - 1] !== \"undefined\") {\n            if (typeof args[args.length - 1] !== \"function\") {\n                throw new Error(\"Callback must be a function.\");\n            }\n            fn.call.apply(fn, __spreadArray([thisContext], args));\n        }\n        else {\n            return new Promise(function (resolve, reject) {\n                var callback = function (err) {\n                    var results = [];\n                    for (var _i = 1; _i < arguments.length; _i++) {\n                        results[_i - 1] = arguments[_i];\n                    }\n                    if (err) {\n                        return reject(err);\n                    }\n                    else {\n                        resolve(results.length > 1 ? results : results[0]);\n                    }\n                };\n                args.pop();\n                args.push(callback);\n                fn.call.apply(fn, __spreadArray([thisContext], args));\n            });\n        }\n    };\n};\nvar ImageKit = /** @class */ (function () {\n    function ImageKit(opts) {\n        if (opts === void 0) { opts = {}; }\n        this.options = {\n            uploadEndpoint: \"https://upload.imagekit.io/api/v1/files/upload\",\n            publicKey: \"\",\n            privateKey: \"\",\n            urlEndpoint: \"\",\n            transformationPosition: transformation_1.default.getDefault(),\n        };\n        this.options = lodash_1.default.extend(this.options, opts);\n        if (!this.options.publicKey) {\n            throw new Error(errorMessages_1.default.MANDATORY_PUBLIC_KEY_MISSING.message);\n        }\n        if (!this.options.privateKey) {\n            throw new Error(errorMessages_1.default.MANDATORY_PRIVATE_KEY_MISSING.message);\n        }\n        if (!this.options.urlEndpoint) {\n            throw new Error(errorMessages_1.default.MANDATORY_URL_ENDPOINT_KEY_MISSING.message);\n        }\n    }\n    /**\n     * You can add multiple origins in the same ImageKit.io account.\n     * URL endpoints allow you to configure which origins are accessible through your account and set their preference order as well.\n     *\n     * @see {@link https://github.com/imagekit-developer/imagekit-nodejs#url-generation}\n     * @see {@link https://docs.imagekit.io/integration/url-endpoints}\n     *\n     * @param urlOptions\n     */\n    ImageKit.prototype.url = function (urlOptions) {\n        return url_1.default(urlOptions, this.options);\n    };\n    ImageKit.prototype.upload = function (uploadOptions, callback) {\n        return promisify(this, upload_1.default)(uploadOptions, this.options, callback);\n    };\n    ImageKit.prototype.listFiles = function (listOptions, callback) {\n        return promisify(this, manage_1.default.listFiles)(listOptions, this.options, callback);\n    };\n    ImageKit.prototype.getFileDetails = function (fileId, callback) {\n        return promisify(this, manage_1.default.getFileDetails)(fileId, this.options, callback);\n    };\n    ImageKit.prototype.getFileMetadata = function (fileId, callback) {\n        return promisify(this, manage_1.default.getFileMetadata)(fileId, this.options, callback);\n    };\n    ImageKit.prototype.updateFileDetails = function (fileId, updateData, callback) {\n        return promisify(this, manage_1.default.updateFileDetails)(fileId, updateData, this.options, callback);\n    };\n    ImageKit.prototype.bulkAddTags = function (fileIds, tags, callback) {\n        return promisify(this, manage_1.default.bulkAddTags)(fileIds, tags, this.options, callback);\n    };\n    ImageKit.prototype.bulkRemoveTags = function (fileIds, tags, callback) {\n        return promisify(this, manage_1.default.bulkRemoveTags)(fileIds, tags, this.options, callback);\n    };\n    ImageKit.prototype.deleteFile = function (fileId, callback) {\n        return promisify(this, manage_1.default.deleteFile)(fileId, this.options, callback);\n    };\n    ImageKit.prototype.purgeCache = function (url, callback) {\n        return promisify(this, manage_1.default.purgeCache)(url, this.options, callback);\n    };\n    ImageKit.prototype.getPurgeCacheStatus = function (requestId, callback) {\n        return promisify(this, manage_1.default.getPurgeCacheStatus)(requestId, this.options, callback);\n    };\n    ImageKit.prototype.bulkDeleteFiles = function (fileIdArray, callback) {\n        return promisify(this, manage_1.default.bulkDeleteFiles)(fileIdArray, this.options, callback);\n    };\n    ImageKit.prototype.copyFile = function (sourceFilePath, destinationPath, callback) {\n        return promisify(this, manage_1.default.copyFile)(sourceFilePath, destinationPath, this.options, callback);\n    };\n    ImageKit.prototype.moveFile = function (sourceFilePath, destinationPath, callback) {\n        return promisify(this, manage_1.default.moveFile)(sourceFilePath, destinationPath, this.options, callback);\n    };\n    ImageKit.prototype.createFolder = function (folderName, parentFolderPath, callback) {\n        return promisify(this, manage_1.default.createFolder)(folderName, parentFolderPath, this.options, callback);\n    };\n    ImageKit.prototype.deleteFolder = function (folderPath, callback) {\n        return promisify(this, manage_1.default.deleteFolder)(folderPath, this.options, callback);\n    };\n    ImageKit.prototype.copyFolder = function (sourceFolderPath, destinationPath, callback) {\n        return promisify(this, manage_1.default.copyFolder)(sourceFolderPath, destinationPath, this.options, callback);\n    };\n    ImageKit.prototype.moveFolder = function (sourceFolderPath, destinationPath, callback) {\n        return promisify(this, manage_1.default.moveFolder)(sourceFolderPath, destinationPath, this.options, callback);\n    };\n    /**\n     * In case you are looking to implement client-side file upload, you are going to need a token, expiry timestamp, and a valid signature for that upload. The SDK provides a simple method that you can use in your code to generate these authentication parameters for you.\n     *\n     * @see {@link https://github.com/imagekit-developer/imagekit-nodejs#authentication-parameter-generation}\n     *\n     * @param token\n     * @param expire\n     */\n    ImageKit.prototype.getAuthenticationParameters = function (token, expire) {\n        return signature_1.default.getAuthenticationParameters(token, expire, this.options);\n    };\n    ImageKit.prototype.getBulkJobStatus = function (jobId, callback) {\n        return promisify(this, manage_1.default.getBulkJobStatus)(jobId, this.options, callback);\n    };\n    /**\n     * Perceptual hashing allows you to construct a hash value that uniquely identifies an input image based on an image's contents. ImageKit.io metadata API returns the pHash value of an image in the response. You can use this value to find a duplicate (or similar) image by calculating the distance between the two images' pHash value.\n     *\n     * This SDK exposes pHashDistance function to calculate the distance between two pHash values. It accepts two pHash hexadecimal strings and returns a numeric value indicative of the level of difference between the two images.\n     *\n     * @see {@link https://docs.imagekit.io/api-reference/metadata-api#perceptual-hash-phash}\n     *\n     * @param firstPHash\n     * @param secondPHash\n     */\n    ImageKit.prototype.pHashDistance = function (firstPHash, secondPHash) {\n        return phash_1.default.pHashDistance(firstPHash, secondPHash);\n    };\n    return ImageKit;\n}());\nmodule.exports = ImageKit;\n"]},"metadata":{},"sourceType":"script"}